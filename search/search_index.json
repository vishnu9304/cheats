{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Cheats","title":"Home"},{"location":"#cheats","text":"","title":"Cheats"},{"location":"crypto/network_security/","text":"Basic Concepts Encryption: Conversion of plain text to cipher text. (Sender) Decryption: Conversion of cipher text to plain text. (Receiver) Cryptography: Study of Encryption Cryptanalysis: Study of Decryption Cryptology: Encryption + Decryption Encryption can be done in two ways: Stream Cipher: Conversion takes place bit by bit. (Recommended for short length messages Block Cipher: Conversion takes place block by block (grouping of bits), block size is determined by the type of algorithm. Two type of Encryption mechanism: Symmetric Encryption: Same key will be used for Encryption process and Decryption process (Secret key). Asymmetric Encryption: Two keys will be used that are mathematically linked (Public and Private keys). Note: It is possible to encrypt data with private key and decrypt it with public key. Types of Attacks Passive attacks: No modification will be done to the data by unauthorized user. Active attacks: Data will modified by unauthorized user. Passive attacks types: Eavesdropping - No modification will be done to the data, the attacker will just listen to the messages. Traffic Analysis - Just Analysing the traffic. Based on the traffic flow access will be gained. Active attacks types: Masquerade attacks - Receiver will receive the data from 3rd party in the name of sender. Replay attacks - Alice (A) sends her hashed password to Bob (B). Eve (E) sniffs the hash and replays it pretending like alice. Data Modification attacks - Sender sends the data, the attacker takes it and modifies it send it to receiver. Denial Of Service attacks - Disrupts the services provided by the server. Security Services Authentication - Acess control. Prevent un-authorized access. Authorization - Verification of user identity. Confidentiality - Securely sharing the data. Integrity - Make sure the data is not modified during transmission. Non-Repudiation - Substitution Techniques - The characters are replaced with corresponding cipher texts which are calulated mathematically (Vulnerable to attacks, suitable only for short length methods). Example: Caesar cipher Transposition Techniques - Re-arrange the order of bit positions. Example: Rail fence Cipher Columnar transposition FEISTEL STRUCTURE Most of the block cipher techniques follows a strcture called as FEISTEL STRUCTURE. FEISTEL STRUCTURE - Surf online for more info. Block ciper design priciples: block size key size number of rounds subkeys Symmentric Algorithms DES (Data Encyption Standard) AES (Advanced Encyption Standard) ASymmentric Algorithms RSA Diffe Hellman Key Exchange. This is not an Encryption algorithm. It is used only to exchange the secret/symmetric keys.","title":"Network security"},{"location":"crypto/network_security/#basic-concepts","text":"Encryption: Conversion of plain text to cipher text. (Sender) Decryption: Conversion of cipher text to plain text. (Receiver) Cryptography: Study of Encryption Cryptanalysis: Study of Decryption Cryptology: Encryption + Decryption","title":"Basic Concepts"},{"location":"crypto/network_security/#encryption-can-be-done-in-two-ways","text":"Stream Cipher: Conversion takes place bit by bit. (Recommended for short length messages Block Cipher: Conversion takes place block by block (grouping of bits), block size is determined by the type of algorithm.","title":"Encryption can be done in two ways:"},{"location":"crypto/network_security/#two-type-of-encryption-mechanism","text":"Symmetric Encryption: Same key will be used for Encryption process and Decryption process (Secret key). Asymmetric Encryption: Two keys will be used that are mathematically linked (Public and Private keys). Note: It is possible to encrypt data with private key and decrypt it with public key.","title":"Two type of Encryption mechanism:"},{"location":"crypto/network_security/#types-of-attacks","text":"Passive attacks: No modification will be done to the data by unauthorized user. Active attacks: Data will modified by unauthorized user. Passive attacks types: Eavesdropping - No modification will be done to the data, the attacker will just listen to the messages. Traffic Analysis - Just Analysing the traffic. Based on the traffic flow access will be gained. Active attacks types: Masquerade attacks - Receiver will receive the data from 3rd party in the name of sender. Replay attacks - Alice (A) sends her hashed password to Bob (B). Eve (E) sniffs the hash and replays it pretending like alice. Data Modification attacks - Sender sends the data, the attacker takes it and modifies it send it to receiver. Denial Of Service attacks - Disrupts the services provided by the server.","title":"Types of Attacks"},{"location":"crypto/network_security/#security-services","text":"Authentication - Acess control. Prevent un-authorized access. Authorization - Verification of user identity. Confidentiality - Securely sharing the data. Integrity - Make sure the data is not modified during transmission. Non-Repudiation - Substitution Techniques - The characters are replaced with corresponding cipher texts which are calulated mathematically (Vulnerable to attacks, suitable only for short length methods). Example: Caesar cipher Transposition Techniques - Re-arrange the order of bit positions. Example: Rail fence Cipher Columnar transposition","title":"Security Services"},{"location":"crypto/network_security/#feistel-structure","text":"Most of the block cipher techniques follows a strcture called as FEISTEL STRUCTURE. FEISTEL STRUCTURE - Surf online for more info. Block ciper design priciples: block size key size number of rounds subkeys","title":"FEISTEL STRUCTURE"},{"location":"crypto/network_security/#symmentric-algorithms","text":"DES (Data Encyption Standard) AES (Advanced Encyption Standard)","title":"Symmentric Algorithms"},{"location":"crypto/network_security/#asymmentric-algorithms","text":"RSA Diffe Hellman Key Exchange. This is not an Encryption algorithm. It is used only to exchange the secret/symmetric keys.","title":"ASymmentric Algorithms"},{"location":"crypto/ssl/","text":"Certificate extensions An SSL Certificate is essentially an X.509 certificate, it defines the structure of the certificate. These certificate files will have different extensions based on the format and encoding they use. Types of encoding Binary Base64 ASCII Formats PEM uses Base64 ASCII encoding DER uses Binary encoding PEM file extensions (pem, crt, key, cer) The .pem file can include the server certificate, the intermediate certificate and the private key in a single file The server certificate and intermediate certificate can also be in a separate .crt or .cer file The private key can be in a .key file Each certificate in the PEM file is contained between the ---- BEGIN CERTIFICATE---- and ----END CERTIFICATE---- statements The private key is contained between the ---- BEGIN RSA PRIVATE KEY----- and -----END RSA PRIVATE KEY----- statements The CSR is contained between the -----BEGIN CERTIFICATE REQUEST----- and -----END CERTIFICATE REQUEST----- statements DER file extensions (der, cer) The DER certificates are in binary form, contained in .der or .cer files. These certificates are mainly used in Java-based web servers. OpenSSL commands Print the certificate in text form and don't print certificate output. openssl x509 -in server.crt -text -noout Verify Whether a Certificate and Private Key Match Verify Whether a Certificate and Private Key Match.To verify you need to print out md5 checksums and compare them. openssl x509 -noout -modulus -in server.crt| openssl md5 openssl rsa -noout -modulus -in server.key| openssl md5 Verify key and it's validity sudo openssl rsa -in server.key -noout -check RSA key ok Verify a Certificate was Signed by a CA openssl verify -verbose -CAFile ca.crt server.crt Convert PEM to DER openssl x509 -in server.crt -outform der -out server.der Convert DER to PEM openssl x509 -inform der -in server.der -out server.crt","title":"Ssl"},{"location":"crypto/ssl/#certificate-extensions","text":"An SSL Certificate is essentially an X.509 certificate, it defines the structure of the certificate. These certificate files will have different extensions based on the format and encoding they use.","title":"Certificate extensions"},{"location":"crypto/ssl/#types-of-encoding","text":"Binary Base64 ASCII","title":"Types of encoding"},{"location":"crypto/ssl/#formats","text":"PEM uses Base64 ASCII encoding DER uses Binary encoding","title":"Formats"},{"location":"crypto/ssl/#pem-file-extensions-pem-crt-key-cer","text":"The .pem file can include the server certificate, the intermediate certificate and the private key in a single file The server certificate and intermediate certificate can also be in a separate .crt or .cer file The private key can be in a .key file Each certificate in the PEM file is contained between the ---- BEGIN CERTIFICATE---- and ----END CERTIFICATE---- statements The private key is contained between the ---- BEGIN RSA PRIVATE KEY----- and -----END RSA PRIVATE KEY----- statements The CSR is contained between the -----BEGIN CERTIFICATE REQUEST----- and -----END CERTIFICATE REQUEST----- statements","title":"PEM file extensions (pem, crt, key, cer)"},{"location":"crypto/ssl/#der-file-extensions-der-cer","text":"The DER certificates are in binary form, contained in .der or .cer files. These certificates are mainly used in Java-based web servers.","title":"DER file extensions (der, cer)"},{"location":"crypto/ssl/#openssl-commands","text":"Print the certificate in text form and don't print certificate output. openssl x509 -in server.crt -text -noout","title":"OpenSSL commands"},{"location":"crypto/ssl/#verify-whether-a-certificate-and-private-key-match","text":"Verify Whether a Certificate and Private Key Match.To verify you need to print out md5 checksums and compare them. openssl x509 -noout -modulus -in server.crt| openssl md5 openssl rsa -noout -modulus -in server.key| openssl md5","title":"Verify Whether a Certificate and Private Key Match"},{"location":"crypto/ssl/#verify-key-and-its-validity","text":"sudo openssl rsa -in server.key -noout -check RSA key ok","title":"Verify key and it's validity"},{"location":"crypto/ssl/#verify-a-certificate-was-signed-by-a-ca","text":"openssl verify -verbose -CAFile ca.crt server.crt","title":"Verify a Certificate was Signed by a CA"},{"location":"crypto/ssl/#convert-pem-to-der","text":"openssl x509 -in server.crt -outform der -out server.der","title":"Convert PEM to DER"},{"location":"crypto/ssl/#convert-der-to-pem","text":"openssl x509 -inform der -in server.der -out server.crt","title":"Convert DER to PEM"},{"location":"docker/docker_ca/","text":"Docker Edition Community Edition - Free Opensource Enterprise Edition - Paid version Installing Docker CE 1 - sudo yum install -y device-mapper-persistent-data lvm2 2 - sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo 3 - sudo yum install -y docker-ce-18.09.5 docker-ce-cli-18.09.5 containerd.io 4 - sudo systemctl start docker 5 - sudo systemctl enable docker 6 - sudo useradd -a -G docker username // For allowing normal users to execute docker commands, add them under docker group. Selcting Storage Driver Command to find the storage driver: docker info Changing the default storage driver: 1 - Change it under \"/usr/lib/systemd/system/docker.service\" and add this flag: --storage-driver devicemapper ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock ExecStart=/usr/bin/dockerd -H fd:// --storage-driver devicemapper --containerd=/run/container containerd.sock 2 - Daemon config file. (Recommended Way) /etc/docker/daemon.json { \"storage-driver\": \"devicemapper\" } When you start a container, a thin writable container layer is added on top of the other layers. Any changes the container makes to the filesystem are stored here. The major difference between a container and an image is the top writable layer. When the container is deleted, the writable layer is also deleted. The underlying image remains unchanged. Container Size On Disk: docker ps -s // https://docs.docker.com/storage/storagedriver/ Copy On Write: Copy the files to the writable layer only if the files are modifed. Running the docker Container: (docker run command) Some of the common falgs used with \"docker run\" command. Syntax: docker run [options] image[:tag] [command] [args] -d Run container in detached mode. --name For providing a descriptive name to the container. --restart options no - Never restart the container. on-failure - If container exits with non-zero exit code. always - Always restart the container whether it is successful or not. Also start the container on daemon restart. unless-stopped - It is similar to \"always\", Container will not be restarted, if you stop it explicitly. -p host_port : container_port Publish, expose a port inside the container by mapping it with host port. --rm Remove the container automatically when it exits. Not compatible with \"--restart\" option. --memory Memory Hard Limit. --memory-reservation A soft limit on memory usage. Container will be restricted within this memory if docker detects memory contention on the host. Logging Drivers https://docs.docker.com/config/containers/logging/configure/ Logging Drivers are a pluggable framework for accessing log data from services and container in docker. Configure the default logging driver under /etc/docker/daemon.json using options \"log-driver\" and \"log-opts\" (System Wide) { \"log-driver\": \"json-file\", \"log-opts\": { \"max-size\": \"15m\" } } How to override the settings at the container level. docker run --log-driver json-file --log-opt max-size=50m nginx Image Creation, Management, and Registry Docker Images: The image consists of one or more read-only layers, while the container adds one additional layer. The layered filesystem allows multiple images and containers to share the same layers. This results in 1 - Small overall footprint 2 - Faster image transfer 3 - Faster image build docker image pull IMAGE[:TAG] To pull the docker image. docker image history IMAGE To list the layers used by the image. Components Of Dockerfile https://docs.docker.com/engine/reference/builder/ A docker file is set of instructions which are used to construct docker image. These instructions are called directives. FROM Starts with a new build stage and sets the base image. ENV To set environment variables. RUN Create new filesystem layer by running a command. CMD Default command to run when the container is executed. EXPOSE Technically it will not expose any ports. Documents which ports are intended to be published when running a container. WORKDIR Sets the current working directory for subsequent directives such as ADD,COPY,CMD,ENTRYPOINT We can have multiple WORKDIR directives inside the docker file. WORKDIR /var WORKDIR www //Relative path WORKDIR html The above three WORKDIR directives are equivalent to /var/www/html //Absolute path COPY Copy files from local machine to the image ADD Similar to copy, but little advanced than COPY, like pulling files using URL and extract an archive into loose files in the image. STOPSIGNAL Specify the signal that will be used to stop the container. When you run docker container stop, this signal will be passed. HEALTHCHECK Used to specify a custom health check, to verify the container is running fine. HEALTHCHECK CMD curl localhost:80 docker build -t custom-nginx . docker run -d custom-nginx -p 8080:80 Example: FROM Centos7:latest ENV NGINX_VERSION=1.0.8 RUN yum update -y yum install -y curl RUN yum update -y yum install -y nginx=$NGINX_VERSION /* why \"yum update -y\" is added twice? When you rebuild the image by changing nginx version, it will first look for the line \"RUN yum update -y yum install -y curl\" since there is not change in the RUN directive it will use the same old layer. Note: Inorder to trigger a change to any layer, we should modify the RUN directive. */ CMD [\"nginx\", \"-g\", \"daemon off;\"] Building Efficient Images General tips: - Put things that are less likely to change on lower level layers. - Don't create unnecessary layers. - Avoid including any unnecessary files, packages, etc.. Docker Multistage builds: Docker supports ablity to perform multistage builds.It will have more than one FROM directive in the docker file with each FROM directive starting a new stage. Each stage begins with a completely new set of layers, allowing you to selectively copy only the files needed from previous layer. Example: Below steps will create an image size of 774MB FROM golang:1.12.4 WORKDIR /helloworld COPY helloworld.go . RUN GOOS=linux go build -a -installsuffix cgo -o helloworld . CMD [\"./helloworld\"] Example: Multistate build.This will produce only image size of 7MB. Idea is to keep only the required files not all, in our case we don't need the entire to go image to run our program. All we need is a binary. Create the binay in STAGE1 and move it to STAGE2 image with smaller size. FROM golang:1.12.4 AS compiler //STAGE1 WORKDIR /helloworld COPY helloworld.go . RUN GOOS=linux go build -a -installsuffix cgo -o helloworld . FROM alpine:3.9.3 //STAGE2 WORKDIR /root COPY --from=compiler /helloworld/helloworld . CMD [\"./helloworld\"] REPOSITORY TAG IMAGE ID CREATED SIZE gostage latest 3b3816104992 7 seconds ago 7.53MB go-custom latest 9802cc0d3ab8 10 minutes ago 776MB Managing Images docker pull To pull the images from registry, if not found locally. docker image ls To list images. docker image ls -a To list images including intermediate images. docker inspect image name To get more info about the images. Provides json output. docker inspect --format \"{{.Arch}} {{.Os}}\" --format (go template) to extract specific fields. docker image rm image name / docker rmi image name To remove the image. docker container ls -a / docker ps -a To list the containers. Dangling Images: Dangling Images are something which doesn't have tags and no containers referencing them. When we delete a container, it doesn't necessarily delete the uderlying image. It will delete only the tags not the image. So that image is called danglig image. Cleaning up the Dangling Images: docker image prune If you have any image which is not referenced by anything or any containers. This command will do a clean up. Flattening an Image: Docker doesn't provide an official way to do this. Run a container - docker export (export the container to an archive) - docker import (Import the archive as new image) docker export container flat.tar cat flat.tar | docker import - flat:latest Docker Storage: https://docs.docker.com/storage/ Storage drivers are also known as Graph Drivers. The proper storage driver to use often depends on your operating system. overlay2 Centos8 and RHEL versions aufs Ubuntu device mapper Centos7 and earlier Storage Models: Persistent data can be managed using several storage models. Filesystem storage: Data stored in the form of a file system. Used by overlay and aufs. Efficient use of memory. Inefficient with write-heavy workloads. Block storage: Stores data in block. Used by device mapper. Efficient with write-heavy workloads. Object storage: Stores data in an external object based store. Application must be designed to use object based storage. Flexible and scalable.","title":"Docker ca"},{"location":"docker/docker_ca/#docker-edition","text":"Community Edition - Free Opensource Enterprise Edition - Paid version","title":"Docker Edition"},{"location":"docker/docker_ca/#installing-docker-ce","text":"1 - sudo yum install -y device-mapper-persistent-data lvm2 2 - sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo 3 - sudo yum install -y docker-ce-18.09.5 docker-ce-cli-18.09.5 containerd.io 4 - sudo systemctl start docker 5 - sudo systemctl enable docker 6 - sudo useradd -a -G docker username // For allowing normal users to execute docker commands, add them under docker group.","title":"Installing Docker CE"},{"location":"docker/docker_ca/#selcting-storage-driver","text":"Command to find the storage driver: docker info Changing the default storage driver: 1 - Change it under \"/usr/lib/systemd/system/docker.service\" and add this flag: --storage-driver devicemapper ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock ExecStart=/usr/bin/dockerd -H fd:// --storage-driver devicemapper --containerd=/run/container containerd.sock 2 - Daemon config file. (Recommended Way) /etc/docker/daemon.json { \"storage-driver\": \"devicemapper\" } When you start a container, a thin writable container layer is added on top of the other layers. Any changes the container makes to the filesystem are stored here. The major difference between a container and an image is the top writable layer. When the container is deleted, the writable layer is also deleted. The underlying image remains unchanged. Container Size On Disk: docker ps -s // https://docs.docker.com/storage/storagedriver/ Copy On Write: Copy the files to the writable layer only if the files are modifed.","title":"Selcting Storage Driver"},{"location":"docker/docker_ca/#running-the-docker-container-docker-run-command","text":"Some of the common falgs used with \"docker run\" command. Syntax: docker run [options] image[:tag] [command] [args] -d Run container in detached mode. --name For providing a descriptive name to the container. --restart options no - Never restart the container. on-failure - If container exits with non-zero exit code. always - Always restart the container whether it is successful or not. Also start the container on daemon restart. unless-stopped - It is similar to \"always\", Container will not be restarted, if you stop it explicitly. -p host_port : container_port Publish, expose a port inside the container by mapping it with host port. --rm Remove the container automatically when it exits. Not compatible with \"--restart\" option. --memory Memory Hard Limit. --memory-reservation A soft limit on memory usage. Container will be restricted within this memory if docker detects memory contention on the host.","title":"Running the docker Container: (docker run command)"},{"location":"docker/docker_ca/#logging-drivers","text":"https://docs.docker.com/config/containers/logging/configure/ Logging Drivers are a pluggable framework for accessing log data from services and container in docker. Configure the default logging driver under /etc/docker/daemon.json using options \"log-driver\" and \"log-opts\" (System Wide) { \"log-driver\": \"json-file\", \"log-opts\": { \"max-size\": \"15m\" } } How to override the settings at the container level. docker run --log-driver json-file --log-opt max-size=50m nginx","title":"Logging Drivers"},{"location":"docker/docker_ca/#image-creation-management-and-registry","text":"Docker Images: The image consists of one or more read-only layers, while the container adds one additional layer. The layered filesystem allows multiple images and containers to share the same layers. This results in 1 - Small overall footprint 2 - Faster image transfer 3 - Faster image build docker image pull IMAGE[:TAG] To pull the docker image. docker image history IMAGE To list the layers used by the image.","title":"Image Creation, Management, and Registry"},{"location":"docker/docker_ca/#components-of-dockerfile","text":"https://docs.docker.com/engine/reference/builder/ A docker file is set of instructions which are used to construct docker image. These instructions are called directives. FROM Starts with a new build stage and sets the base image. ENV To set environment variables. RUN Create new filesystem layer by running a command. CMD Default command to run when the container is executed. EXPOSE Technically it will not expose any ports. Documents which ports are intended to be published when running a container. WORKDIR Sets the current working directory for subsequent directives such as ADD,COPY,CMD,ENTRYPOINT We can have multiple WORKDIR directives inside the docker file. WORKDIR /var WORKDIR www //Relative path WORKDIR html The above three WORKDIR directives are equivalent to /var/www/html //Absolute path COPY Copy files from local machine to the image ADD Similar to copy, but little advanced than COPY, like pulling files using URL and extract an archive into loose files in the image. STOPSIGNAL Specify the signal that will be used to stop the container. When you run docker container stop, this signal will be passed. HEALTHCHECK Used to specify a custom health check, to verify the container is running fine. HEALTHCHECK CMD curl localhost:80 docker build -t custom-nginx . docker run -d custom-nginx -p 8080:80 Example: FROM Centos7:latest ENV NGINX_VERSION=1.0.8 RUN yum update -y yum install -y curl RUN yum update -y yum install -y nginx=$NGINX_VERSION /* why \"yum update -y\" is added twice? When you rebuild the image by changing nginx version, it will first look for the line \"RUN yum update -y yum install -y curl\" since there is not change in the RUN directive it will use the same old layer. Note: Inorder to trigger a change to any layer, we should modify the RUN directive. */ CMD [\"nginx\", \"-g\", \"daemon off;\"]","title":"Components Of Dockerfile"},{"location":"docker/docker_ca/#building-efficient-images","text":"General tips: - Put things that are less likely to change on lower level layers. - Don't create unnecessary layers. - Avoid including any unnecessary files, packages, etc.. Docker Multistage builds: Docker supports ablity to perform multistage builds.It will have more than one FROM directive in the docker file with each FROM directive starting a new stage. Each stage begins with a completely new set of layers, allowing you to selectively copy only the files needed from previous layer. Example: Below steps will create an image size of 774MB FROM golang:1.12.4 WORKDIR /helloworld COPY helloworld.go . RUN GOOS=linux go build -a -installsuffix cgo -o helloworld . CMD [\"./helloworld\"] Example: Multistate build.This will produce only image size of 7MB. Idea is to keep only the required files not all, in our case we don't need the entire to go image to run our program. All we need is a binary. Create the binay in STAGE1 and move it to STAGE2 image with smaller size. FROM golang:1.12.4 AS compiler //STAGE1 WORKDIR /helloworld COPY helloworld.go . RUN GOOS=linux go build -a -installsuffix cgo -o helloworld . FROM alpine:3.9.3 //STAGE2 WORKDIR /root COPY --from=compiler /helloworld/helloworld . CMD [\"./helloworld\"] REPOSITORY TAG IMAGE ID CREATED SIZE gostage latest 3b3816104992 7 seconds ago 7.53MB go-custom latest 9802cc0d3ab8 10 minutes ago 776MB","title":"Building Efficient Images"},{"location":"docker/docker_ca/#managing-images","text":"docker pull To pull the images from registry, if not found locally. docker image ls To list images. docker image ls -a To list images including intermediate images. docker inspect image name To get more info about the images. Provides json output. docker inspect --format \"{{.Arch}} {{.Os}}\" --format (go template) to extract specific fields. docker image rm image name / docker rmi image name To remove the image. docker container ls -a / docker ps -a To list the containers.","title":"Managing Images"},{"location":"docker/docker_ca/#dangling-images","text":"Dangling Images are something which doesn't have tags and no containers referencing them. When we delete a container, it doesn't necessarily delete the uderlying image. It will delete only the tags not the image. So that image is called danglig image.","title":"Dangling Images:"},{"location":"docker/docker_ca/#cleaning-up-the-dangling-images","text":"docker image prune If you have any image which is not referenced by anything or any containers. This command will do a clean up.","title":"Cleaning up the Dangling Images:"},{"location":"docker/docker_ca/#flattening-an-image-docker-doesnt-provide-an-official-way-to-do-this","text":"Run a container - docker export (export the container to an archive) - docker import (Import the archive as new image) docker export container flat.tar cat flat.tar | docker import - flat:latest","title":"Flattening an Image: Docker doesn't provide an official way to do this."},{"location":"docker/docker_ca/#docker-storage-httpsdocsdockercomstorage","text":"Storage drivers are also known as Graph Drivers. The proper storage driver to use often depends on your operating system. overlay2 Centos8 and RHEL versions aufs Ubuntu device mapper Centos7 and earlier Storage Models: Persistent data can be managed using several storage models.","title":"Docker Storage: https://docs.docker.com/storage/"},{"location":"docker/docker_ca/#filesystem-storage","text":"Data stored in the form of a file system. Used by overlay and aufs. Efficient use of memory. Inefficient with write-heavy workloads.","title":"Filesystem storage:"},{"location":"docker/docker_ca/#block-storage","text":"Stores data in block. Used by device mapper. Efficient with write-heavy workloads.","title":"Block storage:"},{"location":"docker/docker_ca/#object-storage","text":"Stores data in an external object based store. Application must be designed to use object based storage. Flexible and scalable.","title":"Object storage:"},{"location":"extensions/admonition/","text":"Admonition Admonition is an extension included in the standard Markdown library that makes it possible to add block-styled side content to your documentation, for example summaries, notes, hints or warnings. Installation Add the following lines to your mkdocs.yml : markdown_extensions: - admonition Usage Admonition blocks follow a simple syntax: every block is started with !!! , followed by a single keyword which is used as the type qualifier of the block. The content of the block then follows on the next line, indented by four spaces. Example: !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Changing the title By default, the block title will equal the type qualifier in titlecase. However, it can easily be changed by adding a quoted string after the type qualifier. Example: !!! note Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: !!! note \"Phasellus posuere in sem ut cursus\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Removing the title Similar to setting a custom title , the icon and title can be omitted by providing an empty string after the type qualifier: Example: !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: !!! note \"\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Embedded code blocks Blocks can contain all kinds of text content, including headlines, lists, paragraphs and other blocks \u2013 except code blocks, because the parser from the standard Markdown library does not account for those. However, the PyMdown Extensions package adds an extension called SuperFences , which makes it possible to nest code blocks within other blocks, respectively Admonition blocks. Example: !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. ``` mysql SELECT Employees.EmployeeID, Employees.Name, Employees.Salary, Manager.Name AS Manager FROM Employees LEFT JOIN Employees AS Manager ON Employees.ManagerID = Manager.EmployeeID WHERE Employees.EmployeeID = '087652'; ``` Nunc eu odio eleifend, blandit leo a, volutpat sapien. Phasellus posuere in sem ut cursus. Nullam sit amet tincidunt ipsum, sit amet elementum turpis. Etiam ipsum quam, mattis in purus vitae, lacinia fermentum enim. Collapsible blocks The Details extension which is also part of the PyMdown Extensions package adds support for rendering collapsible Admonition blocks. This is useful for FAQs or content that is of secondary nature. Example: ??? note Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: ??? note \"Phasellus posuere in sem ut cursus\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. By adding a + sign directly after the start marker, blocks can be rendered open by default. Types Admonition supports user-defined type qualifiers which may influence the style of the inserted block. Following is a list of type qualifiers provided by the Material theme, whereas the default type, and thus fallback for unknown type qualifiers, is note . Note Example: !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: note seealso Abstract Example: !!! abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: !!! abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: abstract summary tldr Info Example: !!! info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: !!! info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: info todo Tip Example: !!! tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: !!! tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: tip hint important Success Example: !!! success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: !!! success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: success check done Question Example: !!! question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: !!! question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: question help faq Warning Example: !!! warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: !!! warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: warning caution attention Failure Example: !!! failure Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: !!! failure Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: failure fail missing Danger Example: !!! danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: !!! danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: danger error Bug Example: !!! bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: !!! bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: bug Example Example: !!! example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: !!! example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: example snippet Quote Example: !!! quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: !!! quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: quote cite","title":"Admonition"},{"location":"extensions/admonition/#admonition","text":"Admonition is an extension included in the standard Markdown library that makes it possible to add block-styled side content to your documentation, for example summaries, notes, hints or warnings.","title":"Admonition"},{"location":"extensions/admonition/#installation","text":"Add the following lines to your mkdocs.yml : markdown_extensions: - admonition","title":"Installation"},{"location":"extensions/admonition/#usage","text":"Admonition blocks follow a simple syntax: every block is started with !!! , followed by a single keyword which is used as the type qualifier of the block. The content of the block then follows on the next line, indented by four spaces. Example: !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Usage"},{"location":"extensions/admonition/#changing-the-title","text":"By default, the block title will equal the type qualifier in titlecase. However, it can easily be changed by adding a quoted string after the type qualifier. Example: !!! note Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: !!! note \"Phasellus posuere in sem ut cursus\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Changing the title"},{"location":"extensions/admonition/#removing-the-title","text":"Similar to setting a custom title , the icon and title can be omitted by providing an empty string after the type qualifier: Example: !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: !!! note \"\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Removing the title"},{"location":"extensions/admonition/#embedded-code-blocks","text":"Blocks can contain all kinds of text content, including headlines, lists, paragraphs and other blocks \u2013 except code blocks, because the parser from the standard Markdown library does not account for those. However, the PyMdown Extensions package adds an extension called SuperFences , which makes it possible to nest code blocks within other blocks, respectively Admonition blocks. Example: !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. ``` mysql SELECT Employees.EmployeeID, Employees.Name, Employees.Salary, Manager.Name AS Manager FROM Employees LEFT JOIN Employees AS Manager ON Employees.ManagerID = Manager.EmployeeID WHERE Employees.EmployeeID = '087652'; ``` Nunc eu odio eleifend, blandit leo a, volutpat sapien. Phasellus posuere in sem ut cursus. Nullam sit amet tincidunt ipsum, sit amet elementum turpis. Etiam ipsum quam, mattis in purus vitae, lacinia fermentum enim.","title":"Embedded code blocks"},{"location":"extensions/admonition/#collapsible-blocks","text":"The Details extension which is also part of the PyMdown Extensions package adds support for rendering collapsible Admonition blocks. This is useful for FAQs or content that is of secondary nature. Example: ??? note Phasellus posuere in sem ut cursus Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: ??? note \"Phasellus posuere in sem ut cursus\" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. By adding a + sign directly after the start marker, blocks can be rendered open by default.","title":"Collapsible blocks"},{"location":"extensions/admonition/#types","text":"Admonition supports user-defined type qualifiers which may influence the style of the inserted block. Following is a list of type qualifiers provided by the Material theme, whereas the default type, and thus fallback for unknown type qualifiers, is note .","title":"Types"},{"location":"extensions/admonition/#note","text":"Example: !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: note seealso","title":"Note"},{"location":"extensions/admonition/#abstract","text":"Example: !!! abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: !!! abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: abstract summary tldr","title":"Abstract"},{"location":"extensions/admonition/#info","text":"Example: !!! info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: !!! info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: info todo","title":"Info"},{"location":"extensions/admonition/#tip","text":"Example: !!! tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: !!! tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: tip hint important","title":"Tip"},{"location":"extensions/admonition/#success","text":"Example: !!! success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: !!! success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: success check done","title":"Success"},{"location":"extensions/admonition/#question","text":"Example: !!! question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: !!! question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: question help faq","title":"Question"},{"location":"extensions/admonition/#warning","text":"Example: !!! warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: !!! warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: warning caution attention","title":"Warning"},{"location":"extensions/admonition/#failure","text":"Example: !!! failure Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: !!! failure Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: failure fail missing","title":"Failure"},{"location":"extensions/admonition/#danger","text":"Example: !!! danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: !!! danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: danger error","title":"Danger"},{"location":"extensions/admonition/#bug","text":"Example: !!! bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: !!! bug Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: bug","title":"Bug"},{"location":"extensions/admonition/#example","text":"Example: !!! example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: !!! example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: example snippet","title":"Example"},{"location":"extensions/admonition/#quote","text":"Example: !!! quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: !!! quote Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Qualifiers: quote cite","title":"Quote"},{"location":"extensions/codehilite/","text":"CodeHilite CodeHilite is an extension that adds syntax highlighting to code blocks and is included in the standard Markdown library. The highlighting process is executed during compilation of the Markdown file. !!! failure \"Syntax highlighting not working?\" Please ensure that [Pygments][2] is installed. See the next section for further directions on how to set up Pygments or use the official [Docker image][3] with all dependencies pre-installed. Installation CodeHilite parses code blocks and wraps them in pre tags. If Pygments is installed, which is a generic syntax highlighter with support for over 300 languages , CodeHilite will also highlight the code block. Pygments can be installed with the following command: pip install pygments To enable CodeHilite, add the following lines to your mkdocs.yml : markdown_extensions: - codehilite Usage Specifying the language The CodeHilite extension uses the same syntax as regular Markdown code blocks, but needs to know the language of the code block. This can be done in three different ways. via Markdown syntax recommended In Markdown, code blocks can be opened and closed by writing three backticks on separate lines. To add code highlighting to those blocks, the easiest way is to specify the language directly after the opening block. Example: ``` python import tensorflow as tf ``` Result: import tensorflow as tf via Shebang Alternatively, if the first line of a code block contains a shebang, the language is derived from the path referenced in the shebang. This will only work for code blocks that are indented using four spaces, not for those encapsulated in three backticks. Example: #!/usr/bin/python import tensorflow as tf Result: #!/usr/bin/python import tensorflow as tf via three colons If the first line starts with three colons followed by a language identifier, the first line is stripped. This will only work for code blocks that are indented using four spaces, not for those encapsulated in three backticks. Example: :::python import tensorflow as tf Result: :::python import tensorflow as tf Adding line numbers Line numbers can be added by enabling the linenums flag in your mkdocs.yml : markdown_extensions: - codehilite: linenums: true Example: ``` python Bubble sort def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` Result: #!python \"\"\" Bubble sort \"\"\" def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] Grouping code blocks The SuperFences extension which is part of the PyMdown Extensions package adds support for grouping code blocks with tabs. This is especially useful for documenting projects with multiple language bindings. Example: ``` bash tab= Bash #!/bin/bash echo Hello world! ``` ``` c tab= C #include stdio.h int main(void) { printf( Hello world!\\n ); } ``` ``` c++ tab= C++ #include iostream int main() { std::cout Hello world! std::endl; return 0; } ``` ``` c# tab= C# using System; class Program { static void Main(string[] args) { Console.WriteLine( Hello world! ); } } ``` Result: ``` bash tab=\"Bash\" !/bin/bash echo \"Hello world!\" ``` c tab= C #include stdio.h int main(void) { printf( Hello world!\\n ); } ``` c++ tab=\"C++\" include int main() { std::cout \"Hello world!\" std::endl; return 0; } ``` c# tab= C# using System; class Program { static void Main(string[] args) { Console.WriteLine( Hello world! ); } } Highlighting specific lines Specific lines can be highlighted by passing the line numbers to the hl_lines argument placed right after the language identifier. Line counts start at 1. Example: ``` python hl_lines= 3 4 Bubble sort def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` Result: #!python hl_lines=\"3 4\" \"\"\" Bubble sort \"\"\" def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] Supported languages excerpt CodeHilite uses Pygments , a generic syntax highlighter with support for over 300 languages , so the following list of examples is just an excerpt. Bash #!/bin/bash for OPT in $@ do case $OPT in '-f' ) canonicalize=1 ;; '-n' ) switchlf= -n ;; esac done # readlink -f function __readlink_f { target= $1 while test -n $target ; do filepath= $target cd `dirname $filepath ` target=`readlink $filepath ` done /bin/echo $switchlf `pwd -P`/`basename $filepath ` } if [ ! $canonicalize ]; then readlink $switchlf $@ else for file in $@ do case $file in -* ) ;; * ) __readlink_f $file ;; esac done fi exit $? C extern size_t pb_varint_scan(const uint8_t data[], size_t left) { assert(data left); left = left 10 ? 10 : left; #ifdef __SSE2__ /* Mapping: remaining bytes == bitmask */ static const int mask_map[] = { 0x0000, 0x0001, 0x0003, 0x0007, 0x000F, 0x001F, 0x003F, 0x007F, 0x00FF, 0x01FF, 0x03FF }; /* Load buffer into 128-bit integer and create high-bit mask */ __m128i temp = _mm_loadu_si128((const __m128i *)data); __m128i high = _mm_set1_epi8(0x80); /* Intersect and extract mask with high-bits set */ int mask = _mm_movemask_epi8(_mm_and_si128(temp, high)); mask = (mask mask_map[left]) ^ mask_map[left]; /* Count trailing zeroes */ return mask ? __builtin_ctz(mask) + 1 : 0; #else /* Linear scan */ size_t size = 0; while (data[size++] 0x80) if (!--left) return 0; return size; #endif /* __SSE2__ */ } C++ Extension:: Extension(const Descriptor *descriptor, const Descriptor *scope) : descriptor_(descriptor), scope_(scope) { /* Extract full name for signature */ variables_[ signature ] = descriptor_- full_name(); /* Prepare message symbol */ variables_[ message ] = StringReplace( variables_[ signature ], . , _ , true); LowerString( (variables_[ message ])); /* Suffix scope to identifiers, if given */ string suffix ( ); if (scope_) { suffix = scope_- full_name(); /* Check if the base and extension types are in the same package */ if (!scope_- file()- package().compare(descriptor_- file()- package())) suffix = StripPrefixString(suffix, scope_- file()- package() + . ); /* Append to signature */ variables_[ signature ] += .[ + suffix + ] ; suffix = _ + suffix; } /* Prepare extension symbol */ variables_[ extension ] = StringReplace( suffix, . , _ , true); LowerString( (variables_[ extension ])); } C public static void Send( Socket socket, byte[] buffer, int offset, int size, int timeout) { int startTickCount = Environment.TickCount; int sent = 0; do { if (Environment.TickCount startTickCount + timeout) throw new Exception( Timeout. ); try { sent += socket.Send(buffer, offset + sent, size - sent, SocketFlags.None); } catch (SocketException ex) { if (ex.SocketErrorCode == SocketError.WouldBlock || ex.SocketErrorCode == SocketError.IOPending || ex.SocketErrorCode == SocketError.NoBufferSpaceAvailable) { /* Socket buffer is probably full, wait and try again */ Thread.Sleep(30); } else { throw ex; } } } while (sent size); } Clojure (clojure-version) (defn partition-when [f] (fn [rf] (let [a (java.util.ArrayList.) fval (volatile! false)] (fn ([] (rf)) ([result] (let [result (if (.isEmpty a) result (let [v (vec (.toArray a))] ;; Clear first (.clear a) (unreduced (rf result v))))] (rf result))) ([result input] (if-not (and (f input) @fval) (do (vreset! fval true) (.add a input) result) (let [v (vec (.toArray a))] (.clear a) (let [ret (rf result v)] (when-not (reduced? ret) (.add a input)) ret)))))))) (into [] (partition-when #(.startsWith % )) [ 1d 33 1 2 22 3 ]) Diff Index: grunt.js =================================================================== --- grunt.js (revision 31200) +++ grunt.js (working copy) @@ -12,6 +12,7 @@ module.exports = function (grunt) { + console.log('hello world'); // Project configuration. grunt.initConfig({ lint: { @@ -19,10 +20,6 @@ 'packages/services.web/{!(test)/**/,}*.js', 'packages/error/**/*.js' ], - scripts: [ - 'grunt.js', - 'db/**/*.js' - ], browser: [ 'packages/web/server.js', 'packages/web/server/**/*.js', Docker FROM ubuntu # Install vnc, xvfb in order to create a 'fake' display and firefox RUN apt-get update apt-get install -y x11vnc xvfb firefox RUN mkdir ~/.vnc # Setup a password RUN x11vnc -storepasswd 1234 ~/.vnc/passwd # Autostart firefox (might not be the best way, but it does the trick) RUN bash -c 'echo firefox /.bashrc' EXPOSE 5900 CMD [ x11vnc , -forever , -usepw , -create ] Elixir require Logger def accept(port) do {:ok, socket} = :gen_tcp.listen(port, [:binary, packet: :line, active: false, reuseaddr: true]) Logger.info Accepting connections on port #{port} loop_acceptor(socket) end defp loop_acceptor(socket) do {:ok, client} = :gen_tcp.accept(socket) serve(client) loop_acceptor(socket) end defp serve(socket) do socket | read_line() | write_line(socket) serve(socket) end defp read_line(socket) do {:ok, data} = :gen_tcp.recv(socket, 0) data end defp write_line(line, socket) do :gen_tcp.send(socket, line) end Erlang circular(Defs) - [ { { Type, Base }, Fields } || { { Type, Base }, Fields } - Defs, Type == msg, circular(Base, Defs) ]. circular(Base, Defs) - Fields = proplists:get_value({ msg, Base }, Defs), circular(Defs, Fields, [Base]). circular(_Defs, [], _Path) - false; circular(Defs, [Field | Fields], Path) - case Field#field.type of { msg, Type } - case lists:member(Type, Path) of false - Children = proplists:get_value({ msg, Type }, Defs), case circular(Defs, Children, [Type | Path]) of false - circular(Defs, Fields, Path); true - true end; true - Type == lists:last(Path) andalso (length(Path) == 1 orelse not is_tree(Path)) end; _ - circular(Defs, Fields, Path) end. F /// Asynchronously download retangles from the server /// and decode the JSON format to F# Rectangle record let [ Js ] getRectangles () : Async Rectangle[] = async { let req = XMLHttpRequest() req.Open( POST , /get , true) let! resp = req.AsyncSend() return JSON.parse(resp) } /// Repeatedly update rectangles after 0.5 sec let [ Js ] updateLoop () = async { while true do do! Async.Sleep(500) let! rects = getRectangles() cleanRectangles() rects | Array.iter createRectangle } Go package main import fmt func counter(id int, channel chan int, closer bool) { for i := 0; i 10000000; i++ { fmt.Println( process , id, send , i) channel - 1 } if closer { close(channel ) } } func main() { channel := make(chan int) go counter(1, channel, false) go counter(2, channel, true) x := 0 // receiving data from channel for i := range channel { fmt.Println( receiving ) x += i } fmt.Println(x) } HTML !doctype html html class= no-js lang= head meta charset= utf-8 meta http-equiv= x-ua-compatible content= ie=edge title HTML5 Boilerplate /title meta name= description content= meta name= viewport content= width=device-width, initial-scale=1 link rel= apple-touch-icon href= apple-touch-icon.png link rel= stylesheet href= css/normalize.css link rel= stylesheet href= css/main.css script src= js/vendor/modernizr-2.8.3.min.js /script /head body p Hello world! This is HTML5 Boilerplate. /p /body /html Java import java.util.LinkedList; import java.lang.reflect.Array; public class UnsortedHashSet E { private static final double LOAD_FACTOR_LIMIT = 0.7; private int size; private LinkedList E [] con; public UnsortedHashSet() { con = (LinkedList E [])(new LinkedList[10]); } public boolean add(E obj) { int oldSize = size; int index = Math.abs(obj.hashCode()) % con.length; if (con[index] == null) con[index] = new LinkedList E (); if (!con[index].contains(obj)) { con[index].add(obj); size++; } if (1.0 * size / con.length LOAD_FACTOR_LIMIT) resize(); return oldSize != size; } private void resize() { UnsortedHashSet E temp = new UnsortedHashSet E (); temp.con = (LinkedList E [])(new LinkedList[con.length * 2 + 1]); for (int i = 0; i con.length; i++) { if (con[i] != null) for (E e : con[i]) temp.add(e); } con = temp.con; } public int size() { return size; } } JavaScript var Math = require('lib/math'); var _extends = function (target) { for (var i = 1; i arguments.length; i++) { var source = arguments[i]; for (var key in source) { target[key] = source[key]; } } return target; }; var e = exports.e = 2.71828182846; exports['default'] = function (x) { return Math.exp(x); }; module.exports = _extends(exports['default'], exports); JSON { name : mkdocs-material , version : 0.2.4 , description : A Material Design theme for MkDocs , homepage : http://squidfunk.github.io/mkdocs-material/ , authors : [ squidfunk martin.donath@squidfunk.com ], license : MIT , main : Gulpfile.js , scripts : { start : ./node_modules/.bin/gulp watch --mkdocs , build : ./node_modules/.bin/gulp build --production } ... } Julia using MXNet mlp = @mx.chain mx.Variable(:data) = mx.FullyConnected(name=:fc1, num_hidden=128) = mx.Activation(name=:relu1, act_type=:relu) = mx.FullyConnected(name=:fc2, num_hidden=64) = mx.Activation(name=:relu2, act_type=:relu) = mx.FullyConnected(name=:fc3, num_hidden=10) = mx.SoftmaxOutput(name=:softmax) # data provider batch_size = 100 include(Pkg.dir( MXNet , examples , mnist , mnist-data.jl )) train_provider, eval_provider = get_mnist_providers(batch_size) # setup model model = mx.FeedForward(mlp, context=mx.cpu()) # optimization algorithm optimizer = mx.SGD(lr=0.1, momentum=0.9) # fit parameters mx.fit(model, optimizer, train_provider, n_epoch=20, eval_data=eval_provider) Lua local ffi = require( ffi ) ffi.cdef[[ void Sleep(int ms); int poll(struct pollfd *fds, unsigned long nfds, int timeout); ]] local sleep if ffi.os == Windows then function sleep(s) ffi.C.Sleep(s*1000) end else function sleep(s) ffi.C.poll(nil, 0, s * 1000) end end for i = 1,160 do io.write( . ); io.flush() sleep(0.01) end io.write( \\n ) MySQL SELECT Employees.EmployeeID, Employees.Name, Employees.Salary, Manager.Name AS Manager FROM Employees LEFT JOIN Employees AS Manager ON Employees.ManagerID = Manager.EmployeeID WHERE Employees.EmployeeID = '087652'; PHP ?php // src/AppBundle/Controller/LuckyController.php namespace AppBundle\\Controller; use Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route; use Symfony\\Component\\HttpFoundation\\Response; class LuckyController { /** * @Route( /lucky/number ) */ public function numberAction() { $number = mt_rand(0, 100); return new Response( ' html body Lucky number: '.$number.' /body /html ' ); } } Protocol Buffers syntax = proto2 ; package caffe; // Specifies the shape (dimensions) of a Blob. message BlobShape { repeated int64 dim = 1 [packed = true]; } message BlobProto { optional BlobShape shape = 7; repeated float data = 5 [packed = true]; repeated float diff = 6 [packed = true]; // 4D dimensions -- deprecated. Use shape instead. optional int32 num = 1 [default = 0]; optional int32 channels = 2 [default = 0]; optional int32 height = 3 [default = 0]; optional int32 width = 4 [default = 0]; } Python A very simple MNIST classifier. See extensive documentation at http://tensorflow.org/tutorials/mnist/beginners/index.md from __future__ import absolute_import from __future__ import division from __future__ import print_function # Import data from tensorflow.examples.tutorials.mnist import input_data import tensorflow as tf flags = tf.app.flags FLAGS = flags.FLAGS flags.DEFINE_string('data_dir', '/tmp/data/', 'Directory for storing data') mnist = input_data.read_data_sets(FLAGS.data_dir, one_hot=True) sess = tf.InteractiveSession() # Create the model x = tf.placeholder(tf.float32, [None, 784]) W = tf.Variable(tf.zeros([784, 10])) b = tf.Variable(tf.zeros([10])) y = tf.nn.softmax(tf.matmul(x, W) + b) Ruby require 'finity/event' require 'finity/machine' require 'finity/state' require 'finity/transition' require 'finity/version' module Finity class InvalidCallback StandardError; end class MissingCallback StandardError; end class InvalidState StandardError; end # Class methods to be injected into the including class upon inclusion. module ClassMethods # Instantiate a new state machine for the including class by accepting a # block with state and event (and subsequent transition) definitions. def finity options = {}, block @finity ||= Machine.new self, options, block end # Return the names of all registered states. def states @finity.states.map { |name, _| name } end # Return the names of all registered events. def events @finity.events.map { |name, _| name } end end # Inject methods into the including class upon inclusion. def self.included base base.extend ClassMethods end end XML ?xml version= 1.0 encoding= UTF-8 ? !DOCTYPE mainTag SYSTEM some.dtd [ENTITY % entity] ?oxygen RNGSchema= some.rng type= xml ? xs:main-Tag xmlns:xs= http://www.w3.org/2001/XMLSchema !-- This is a sample comment -- childTag attribute= Quoted Value another-attribute='Single quoted value' a-third-attribute='123' withTextContent Some text content /withTextContent withEntityContent Some text content with lt;entities gt; and mentioning uint8_t and int32_t /withEntityContent otherTag attribute='Single quoted Value'/ /childTag ![CDATA[ some CData ]] /main-Tag","title":"CodeHilite"},{"location":"extensions/codehilite/#codehilite","text":"CodeHilite is an extension that adds syntax highlighting to code blocks and is included in the standard Markdown library. The highlighting process is executed during compilation of the Markdown file. !!! failure \"Syntax highlighting not working?\" Please ensure that [Pygments][2] is installed. See the next section for further directions on how to set up Pygments or use the official [Docker image][3] with all dependencies pre-installed.","title":"CodeHilite"},{"location":"extensions/codehilite/#installation","text":"CodeHilite parses code blocks and wraps them in pre tags. If Pygments is installed, which is a generic syntax highlighter with support for over 300 languages , CodeHilite will also highlight the code block. Pygments can be installed with the following command: pip install pygments To enable CodeHilite, add the following lines to your mkdocs.yml : markdown_extensions: - codehilite","title":"Installation"},{"location":"extensions/codehilite/#usage","text":"","title":"Usage"},{"location":"extensions/codehilite/#specifying-the-language","text":"The CodeHilite extension uses the same syntax as regular Markdown code blocks, but needs to know the language of the code block. This can be done in three different ways.","title":"Specifying the language"},{"location":"extensions/codehilite/#via-markdown-syntax-recommended","text":"In Markdown, code blocks can be opened and closed by writing three backticks on separate lines. To add code highlighting to those blocks, the easiest way is to specify the language directly after the opening block. Example: ``` python import tensorflow as tf ``` Result: import tensorflow as tf","title":"via Markdown syntax recommended"},{"location":"extensions/codehilite/#via-shebang","text":"Alternatively, if the first line of a code block contains a shebang, the language is derived from the path referenced in the shebang. This will only work for code blocks that are indented using four spaces, not for those encapsulated in three backticks. Example: #!/usr/bin/python import tensorflow as tf Result: #!/usr/bin/python import tensorflow as tf","title":"via Shebang"},{"location":"extensions/codehilite/#via-three-colons","text":"If the first line starts with three colons followed by a language identifier, the first line is stripped. This will only work for code blocks that are indented using four spaces, not for those encapsulated in three backticks. Example: :::python import tensorflow as tf Result: :::python import tensorflow as tf","title":"via three colons"},{"location":"extensions/codehilite/#adding-line-numbers","text":"Line numbers can be added by enabling the linenums flag in your mkdocs.yml : markdown_extensions: - codehilite: linenums: true Example: ``` python Bubble sort def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` Result: #!python \"\"\" Bubble sort \"\"\" def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j]","title":"Adding line numbers"},{"location":"extensions/codehilite/#grouping-code-blocks","text":"The SuperFences extension which is part of the PyMdown Extensions package adds support for grouping code blocks with tabs. This is especially useful for documenting projects with multiple language bindings. Example: ``` bash tab= Bash #!/bin/bash echo Hello world! ``` ``` c tab= C #include stdio.h int main(void) { printf( Hello world!\\n ); } ``` ``` c++ tab= C++ #include iostream int main() { std::cout Hello world! std::endl; return 0; } ``` ``` c# tab= C# using System; class Program { static void Main(string[] args) { Console.WriteLine( Hello world! ); } } ``` Result: ``` bash tab=\"Bash\"","title":"Grouping code blocks"},{"location":"extensions/codehilite/#binbash","text":"echo \"Hello world!\" ``` c tab= C #include stdio.h int main(void) { printf( Hello world!\\n ); } ``` c++ tab=\"C++\"","title":"!/bin/bash"},{"location":"extensions/codehilite/#include","text":"int main() { std::cout \"Hello world!\" std::endl; return 0; } ``` c# tab= C# using System; class Program { static void Main(string[] args) { Console.WriteLine( Hello world! ); } }","title":"include "},{"location":"extensions/codehilite/#highlighting-specific-lines","text":"Specific lines can be highlighted by passing the line numbers to the hl_lines argument placed right after the language identifier. Line counts start at 1. Example: ``` python hl_lines= 3 4 Bubble sort def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j] ``` Result: #!python hl_lines=\"3 4\" \"\"\" Bubble sort \"\"\" def bubble_sort(items): for i in range(len(items)): for j in range(len(items) - 1 - i): if items[j] items[j + 1]: items[j], items[j + 1] = items[j + 1], items[j]","title":"Highlighting specific lines"},{"location":"extensions/codehilite/#supported-languages-excerpt","text":"CodeHilite uses Pygments , a generic syntax highlighter with support for over 300 languages , so the following list of examples is just an excerpt.","title":"Supported languages excerpt"},{"location":"extensions/codehilite/#bash","text":"#!/bin/bash for OPT in $@ do case $OPT in '-f' ) canonicalize=1 ;; '-n' ) switchlf= -n ;; esac done # readlink -f function __readlink_f { target= $1 while test -n $target ; do filepath= $target cd `dirname $filepath ` target=`readlink $filepath ` done /bin/echo $switchlf `pwd -P`/`basename $filepath ` } if [ ! $canonicalize ]; then readlink $switchlf $@ else for file in $@ do case $file in -* ) ;; * ) __readlink_f $file ;; esac done fi exit $?","title":"Bash"},{"location":"extensions/codehilite/#c","text":"extern size_t pb_varint_scan(const uint8_t data[], size_t left) { assert(data left); left = left 10 ? 10 : left; #ifdef __SSE2__ /* Mapping: remaining bytes == bitmask */ static const int mask_map[] = { 0x0000, 0x0001, 0x0003, 0x0007, 0x000F, 0x001F, 0x003F, 0x007F, 0x00FF, 0x01FF, 0x03FF }; /* Load buffer into 128-bit integer and create high-bit mask */ __m128i temp = _mm_loadu_si128((const __m128i *)data); __m128i high = _mm_set1_epi8(0x80); /* Intersect and extract mask with high-bits set */ int mask = _mm_movemask_epi8(_mm_and_si128(temp, high)); mask = (mask mask_map[left]) ^ mask_map[left]; /* Count trailing zeroes */ return mask ? __builtin_ctz(mask) + 1 : 0; #else /* Linear scan */ size_t size = 0; while (data[size++] 0x80) if (!--left) return 0; return size; #endif /* __SSE2__ */ }","title":"C"},{"location":"extensions/codehilite/#c_1","text":"Extension:: Extension(const Descriptor *descriptor, const Descriptor *scope) : descriptor_(descriptor), scope_(scope) { /* Extract full name for signature */ variables_[ signature ] = descriptor_- full_name(); /* Prepare message symbol */ variables_[ message ] = StringReplace( variables_[ signature ], . , _ , true); LowerString( (variables_[ message ])); /* Suffix scope to identifiers, if given */ string suffix ( ); if (scope_) { suffix = scope_- full_name(); /* Check if the base and extension types are in the same package */ if (!scope_- file()- package().compare(descriptor_- file()- package())) suffix = StripPrefixString(suffix, scope_- file()- package() + . ); /* Append to signature */ variables_[ signature ] += .[ + suffix + ] ; suffix = _ + suffix; } /* Prepare extension symbol */ variables_[ extension ] = StringReplace( suffix, . , _ , true); LowerString( (variables_[ extension ])); }","title":"C++"},{"location":"extensions/codehilite/#c_2","text":"public static void Send( Socket socket, byte[] buffer, int offset, int size, int timeout) { int startTickCount = Environment.TickCount; int sent = 0; do { if (Environment.TickCount startTickCount + timeout) throw new Exception( Timeout. ); try { sent += socket.Send(buffer, offset + sent, size - sent, SocketFlags.None); } catch (SocketException ex) { if (ex.SocketErrorCode == SocketError.WouldBlock || ex.SocketErrorCode == SocketError.IOPending || ex.SocketErrorCode == SocketError.NoBufferSpaceAvailable) { /* Socket buffer is probably full, wait and try again */ Thread.Sleep(30); } else { throw ex; } } } while (sent size); }","title":"C&#35;"},{"location":"extensions/codehilite/#clojure","text":"(clojure-version) (defn partition-when [f] (fn [rf] (let [a (java.util.ArrayList.) fval (volatile! false)] (fn ([] (rf)) ([result] (let [result (if (.isEmpty a) result (let [v (vec (.toArray a))] ;; Clear first (.clear a) (unreduced (rf result v))))] (rf result))) ([result input] (if-not (and (f input) @fval) (do (vreset! fval true) (.add a input) result) (let [v (vec (.toArray a))] (.clear a) (let [ret (rf result v)] (when-not (reduced? ret) (.add a input)) ret)))))))) (into [] (partition-when #(.startsWith % )) [ 1d 33 1 2 22 3 ])","title":"Clojure"},{"location":"extensions/codehilite/#diff","text":"Index: grunt.js =================================================================== --- grunt.js (revision 31200) +++ grunt.js (working copy) @@ -12,6 +12,7 @@ module.exports = function (grunt) { + console.log('hello world'); // Project configuration. grunt.initConfig({ lint: { @@ -19,10 +20,6 @@ 'packages/services.web/{!(test)/**/,}*.js', 'packages/error/**/*.js' ], - scripts: [ - 'grunt.js', - 'db/**/*.js' - ], browser: [ 'packages/web/server.js', 'packages/web/server/**/*.js',","title":"Diff"},{"location":"extensions/codehilite/#docker","text":"FROM ubuntu # Install vnc, xvfb in order to create a 'fake' display and firefox RUN apt-get update apt-get install -y x11vnc xvfb firefox RUN mkdir ~/.vnc # Setup a password RUN x11vnc -storepasswd 1234 ~/.vnc/passwd # Autostart firefox (might not be the best way, but it does the trick) RUN bash -c 'echo firefox /.bashrc' EXPOSE 5900 CMD [ x11vnc , -forever , -usepw , -create ]","title":"Docker"},{"location":"extensions/codehilite/#elixir","text":"require Logger def accept(port) do {:ok, socket} = :gen_tcp.listen(port, [:binary, packet: :line, active: false, reuseaddr: true]) Logger.info Accepting connections on port #{port} loop_acceptor(socket) end defp loop_acceptor(socket) do {:ok, client} = :gen_tcp.accept(socket) serve(client) loop_acceptor(socket) end defp serve(socket) do socket | read_line() | write_line(socket) serve(socket) end defp read_line(socket) do {:ok, data} = :gen_tcp.recv(socket, 0) data end defp write_line(line, socket) do :gen_tcp.send(socket, line) end","title":"Elixir"},{"location":"extensions/codehilite/#erlang","text":"circular(Defs) - [ { { Type, Base }, Fields } || { { Type, Base }, Fields } - Defs, Type == msg, circular(Base, Defs) ]. circular(Base, Defs) - Fields = proplists:get_value({ msg, Base }, Defs), circular(Defs, Fields, [Base]). circular(_Defs, [], _Path) - false; circular(Defs, [Field | Fields], Path) - case Field#field.type of { msg, Type } - case lists:member(Type, Path) of false - Children = proplists:get_value({ msg, Type }, Defs), case circular(Defs, Children, [Type | Path]) of false - circular(Defs, Fields, Path); true - true end; true - Type == lists:last(Path) andalso (length(Path) == 1 orelse not is_tree(Path)) end; _ - circular(Defs, Fields, Path) end.","title":"Erlang"},{"location":"extensions/codehilite/#f","text":"/// Asynchronously download retangles from the server /// and decode the JSON format to F# Rectangle record let [ Js ] getRectangles () : Async Rectangle[] = async { let req = XMLHttpRequest() req.Open( POST , /get , true) let! resp = req.AsyncSend() return JSON.parse(resp) } /// Repeatedly update rectangles after 0.5 sec let [ Js ] updateLoop () = async { while true do do! Async.Sleep(500) let! rects = getRectangles() cleanRectangles() rects | Array.iter createRectangle }","title":"F&#35;"},{"location":"extensions/codehilite/#go","text":"package main import fmt func counter(id int, channel chan int, closer bool) { for i := 0; i 10000000; i++ { fmt.Println( process , id, send , i) channel - 1 } if closer { close(channel ) } } func main() { channel := make(chan int) go counter(1, channel, false) go counter(2, channel, true) x := 0 // receiving data from channel for i := range channel { fmt.Println( receiving ) x += i } fmt.Println(x) }","title":"Go"},{"location":"extensions/codehilite/#html","text":"!doctype html html class= no-js lang= head meta charset= utf-8 meta http-equiv= x-ua-compatible content= ie=edge title HTML5 Boilerplate /title meta name= description content= meta name= viewport content= width=device-width, initial-scale=1 link rel= apple-touch-icon href= apple-touch-icon.png link rel= stylesheet href= css/normalize.css link rel= stylesheet href= css/main.css script src= js/vendor/modernizr-2.8.3.min.js /script /head body p Hello world! This is HTML5 Boilerplate. /p /body /html","title":"HTML"},{"location":"extensions/codehilite/#java","text":"import java.util.LinkedList; import java.lang.reflect.Array; public class UnsortedHashSet E { private static final double LOAD_FACTOR_LIMIT = 0.7; private int size; private LinkedList E [] con; public UnsortedHashSet() { con = (LinkedList E [])(new LinkedList[10]); } public boolean add(E obj) { int oldSize = size; int index = Math.abs(obj.hashCode()) % con.length; if (con[index] == null) con[index] = new LinkedList E (); if (!con[index].contains(obj)) { con[index].add(obj); size++; } if (1.0 * size / con.length LOAD_FACTOR_LIMIT) resize(); return oldSize != size; } private void resize() { UnsortedHashSet E temp = new UnsortedHashSet E (); temp.con = (LinkedList E [])(new LinkedList[con.length * 2 + 1]); for (int i = 0; i con.length; i++) { if (con[i] != null) for (E e : con[i]) temp.add(e); } con = temp.con; } public int size() { return size; } }","title":"Java"},{"location":"extensions/codehilite/#javascript","text":"var Math = require('lib/math'); var _extends = function (target) { for (var i = 1; i arguments.length; i++) { var source = arguments[i]; for (var key in source) { target[key] = source[key]; } } return target; }; var e = exports.e = 2.71828182846; exports['default'] = function (x) { return Math.exp(x); }; module.exports = _extends(exports['default'], exports);","title":"JavaScript"},{"location":"extensions/codehilite/#json","text":"{ name : mkdocs-material , version : 0.2.4 , description : A Material Design theme for MkDocs , homepage : http://squidfunk.github.io/mkdocs-material/ , authors : [ squidfunk martin.donath@squidfunk.com ], license : MIT , main : Gulpfile.js , scripts : { start : ./node_modules/.bin/gulp watch --mkdocs , build : ./node_modules/.bin/gulp build --production } ... }","title":"JSON"},{"location":"extensions/codehilite/#julia","text":"using MXNet mlp = @mx.chain mx.Variable(:data) = mx.FullyConnected(name=:fc1, num_hidden=128) = mx.Activation(name=:relu1, act_type=:relu) = mx.FullyConnected(name=:fc2, num_hidden=64) = mx.Activation(name=:relu2, act_type=:relu) = mx.FullyConnected(name=:fc3, num_hidden=10) = mx.SoftmaxOutput(name=:softmax) # data provider batch_size = 100 include(Pkg.dir( MXNet , examples , mnist , mnist-data.jl )) train_provider, eval_provider = get_mnist_providers(batch_size) # setup model model = mx.FeedForward(mlp, context=mx.cpu()) # optimization algorithm optimizer = mx.SGD(lr=0.1, momentum=0.9) # fit parameters mx.fit(model, optimizer, train_provider, n_epoch=20, eval_data=eval_provider)","title":"Julia"},{"location":"extensions/codehilite/#lua","text":"local ffi = require( ffi ) ffi.cdef[[ void Sleep(int ms); int poll(struct pollfd *fds, unsigned long nfds, int timeout); ]] local sleep if ffi.os == Windows then function sleep(s) ffi.C.Sleep(s*1000) end else function sleep(s) ffi.C.poll(nil, 0, s * 1000) end end for i = 1,160 do io.write( . ); io.flush() sleep(0.01) end io.write( \\n )","title":"Lua"},{"location":"extensions/codehilite/#mysql","text":"SELECT Employees.EmployeeID, Employees.Name, Employees.Salary, Manager.Name AS Manager FROM Employees LEFT JOIN Employees AS Manager ON Employees.ManagerID = Manager.EmployeeID WHERE Employees.EmployeeID = '087652';","title":"MySQL"},{"location":"extensions/codehilite/#php","text":"?php // src/AppBundle/Controller/LuckyController.php namespace AppBundle\\Controller; use Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route; use Symfony\\Component\\HttpFoundation\\Response; class LuckyController { /** * @Route( /lucky/number ) */ public function numberAction() { $number = mt_rand(0, 100); return new Response( ' html body Lucky number: '.$number.' /body /html ' ); } }","title":"PHP"},{"location":"extensions/codehilite/#protocol-buffers","text":"syntax = proto2 ; package caffe; // Specifies the shape (dimensions) of a Blob. message BlobShape { repeated int64 dim = 1 [packed = true]; } message BlobProto { optional BlobShape shape = 7; repeated float data = 5 [packed = true]; repeated float diff = 6 [packed = true]; // 4D dimensions -- deprecated. Use shape instead. optional int32 num = 1 [default = 0]; optional int32 channels = 2 [default = 0]; optional int32 height = 3 [default = 0]; optional int32 width = 4 [default = 0]; }","title":"Protocol Buffers"},{"location":"extensions/codehilite/#python","text":"A very simple MNIST classifier. See extensive documentation at http://tensorflow.org/tutorials/mnist/beginners/index.md from __future__ import absolute_import from __future__ import division from __future__ import print_function # Import data from tensorflow.examples.tutorials.mnist import input_data import tensorflow as tf flags = tf.app.flags FLAGS = flags.FLAGS flags.DEFINE_string('data_dir', '/tmp/data/', 'Directory for storing data') mnist = input_data.read_data_sets(FLAGS.data_dir, one_hot=True) sess = tf.InteractiveSession() # Create the model x = tf.placeholder(tf.float32, [None, 784]) W = tf.Variable(tf.zeros([784, 10])) b = tf.Variable(tf.zeros([10])) y = tf.nn.softmax(tf.matmul(x, W) + b)","title":"Python"},{"location":"extensions/codehilite/#ruby","text":"require 'finity/event' require 'finity/machine' require 'finity/state' require 'finity/transition' require 'finity/version' module Finity class InvalidCallback StandardError; end class MissingCallback StandardError; end class InvalidState StandardError; end # Class methods to be injected into the including class upon inclusion. module ClassMethods # Instantiate a new state machine for the including class by accepting a # block with state and event (and subsequent transition) definitions. def finity options = {}, block @finity ||= Machine.new self, options, block end # Return the names of all registered states. def states @finity.states.map { |name, _| name } end # Return the names of all registered events. def events @finity.events.map { |name, _| name } end end # Inject methods into the including class upon inclusion. def self.included base base.extend ClassMethods end end","title":"Ruby"},{"location":"extensions/codehilite/#xml","text":"?xml version= 1.0 encoding= UTF-8 ? !DOCTYPE mainTag SYSTEM some.dtd [ENTITY % entity] ?oxygen RNGSchema= some.rng type= xml ? xs:main-Tag xmlns:xs= http://www.w3.org/2001/XMLSchema !-- This is a sample comment -- childTag attribute= Quoted Value another-attribute='Single quoted value' a-third-attribute='123' withTextContent Some text content /withTextContent withEntityContent Some text content with lt;entities gt; and mentioning uint8_t and int32_t /withEntityContent otherTag attribute='Single quoted Value'/ /childTag ![CDATA[ some CData ]] /main-Tag","title":"XML"},{"location":"extensions/footnotes/","text":"Footnotes Footnotes is another extension included in the standard Markdown library. As the name says, it adds the ability to add footnotes to your documentation. Installation Add the following lines to your mkdocs.yml : markdown_extensions: - footnotes Usage The markup for footnotes is similar to the standard Markdown markup for links. A reference is inserted in the text, which can then be defined at any point in the document. Inserting the reference The footnote reference is enclosed in square brackets and starts with a caret, followed by an arbitrary label which may contain numeric identifiers [1, 2, 3, ...] or names [Granovetter et al. 1998]. The rendered references are always consecutive superscripted numbers. Example: Lorem ipsum[^1] dolor sit amet, consectetur adipiscing elit.[^2] Result: Lorem ipsum[^1] dolor sit amet, consectetur adipiscing elit. ^2 Inserting the content The footnote content is also declared with a label, which must match the label used for the footnote reference. It can be inserted at an arbitrary position in the document and is always rendered at the bottom of the page. Furthermore, a backlink is automatically added to the footnote reference. on a single line Short statements can be written on the same line. Example: [^1]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Result: Jump to footnote at the bottom of the page [^1]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. on multiple lines Paragraphs should be written on the next line. As with all Markdown blocks, the content must be indented by four spaces. Example: [^2]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Jump to footnote at the bottom of the page","title":"Footnotes"},{"location":"extensions/footnotes/#footnotes","text":"Footnotes is another extension included in the standard Markdown library. As the name says, it adds the ability to add footnotes to your documentation.","title":"Footnotes"},{"location":"extensions/footnotes/#installation","text":"Add the following lines to your mkdocs.yml : markdown_extensions: - footnotes","title":"Installation"},{"location":"extensions/footnotes/#usage","text":"The markup for footnotes is similar to the standard Markdown markup for links. A reference is inserted in the text, which can then be defined at any point in the document.","title":"Usage"},{"location":"extensions/footnotes/#inserting-the-reference","text":"The footnote reference is enclosed in square brackets and starts with a caret, followed by an arbitrary label which may contain numeric identifiers [1, 2, 3, ...] or names [Granovetter et al. 1998]. The rendered references are always consecutive superscripted numbers. Example: Lorem ipsum[^1] dolor sit amet, consectetur adipiscing elit.[^2] Result: Lorem ipsum[^1] dolor sit amet, consectetur adipiscing elit. ^2","title":"Inserting the reference"},{"location":"extensions/footnotes/#inserting-the-content","text":"The footnote content is also declared with a label, which must match the label used for the footnote reference. It can be inserted at an arbitrary position in the document and is always rendered at the bottom of the page. Furthermore, a backlink is automatically added to the footnote reference.","title":"Inserting the content"},{"location":"extensions/footnotes/#on-a-single-line","text":"Short statements can be written on the same line. Example: [^1]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Result: Jump to footnote at the bottom of the page [^1]: Lorem ipsum dolor sit amet, consectetur adipiscing elit.","title":"on a single line"},{"location":"extensions/footnotes/#on-multiple-lines","text":"Paragraphs should be written on the next line. As with all Markdown blocks, the content must be indented by four spaces. Example: [^2]: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Result: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Jump to footnote at the bottom of the page","title":"on multiple lines"},{"location":"extensions/metadata/","text":"Metadata The Metadata extension makes it possible to add metadata to a document which gives more control over the theme in a page-specific context. Installation Add the following lines to your mkdocs.yml : markdown_extensions: - meta Usage Metadata is written as a series of key-value pairs at the beginning of the Markdown document, delimited by a blank line which ends the metadata context. Naturally, the metadata is stripped from the document before rendering the actual page content and made available to the theme. Example: title: Lorem ipsum dolor sit amet description: Nullam urna elit, malesuada eget finibus ut, ac tortor. path: path/to/file source: file.js # Headline ... See the next section which covers the metadata that is supported by Material. Setting a hero text Material exposes a simple text-only page-local hero via Metadata, as you can see on the current page when you scroll to the top. It's as simple as: hero: Metadata enables hero teaser texts Linking sources When a document is related to a specific set of source files and the repo_url is defined inside the project's mkdocs.yml , the files can be linked using the source key: source: file.js The filename is appended to the repo_url set in your mkdocs.yml , but can be prefixed with a path to ensure correct path resolving: Example: path: tree/master/docs/extensions source: metadata.md Result: See the source section for the resulting output. Redirecting to another page It's sometimes necessary to move documents around in the navigation tree and redirect user from the old URL to the new one. The redirect meta-tag allows to create a redirection from the current document to the address specified in the tag. For instance, if your document contains: redirect: /new/url accessing that document's URL will automatically redirect to /new/url . Overrides Page title The page title can be overridden on a per-document level: title: Lorem ipsum dolor sit amet This will set the title tag inside the document head for the current page to the provided value. It will also override the default behavior of Material for MkDocs which appends the site title using a dash as a separator to the page title. Page description The page description can also be overridden on a per-document level: description: Nullam urna elit, malesuada eget finibus ut, ac tortor. This will set the meta tag containing the site description inside the document head for the current page to the provided value. Disqus As described in the getting started guide , the Disqus comments section can be enabled on a per-document level: disqus: your-shortname Disqus can be disabled for a specific page by setting it to an empty value: disqus:","title":"Metadata"},{"location":"extensions/metadata/#metadata","text":"The Metadata extension makes it possible to add metadata to a document which gives more control over the theme in a page-specific context.","title":"Metadata"},{"location":"extensions/metadata/#installation","text":"Add the following lines to your mkdocs.yml : markdown_extensions: - meta","title":"Installation"},{"location":"extensions/metadata/#usage","text":"Metadata is written as a series of key-value pairs at the beginning of the Markdown document, delimited by a blank line which ends the metadata context. Naturally, the metadata is stripped from the document before rendering the actual page content and made available to the theme. Example: title: Lorem ipsum dolor sit amet description: Nullam urna elit, malesuada eget finibus ut, ac tortor. path: path/to/file source: file.js # Headline ... See the next section which covers the metadata that is supported by Material.","title":"Usage"},{"location":"extensions/metadata/#setting-a-hero-text","text":"Material exposes a simple text-only page-local hero via Metadata, as you can see on the current page when you scroll to the top. It's as simple as: hero: Metadata enables hero teaser texts","title":"Setting a hero text"},{"location":"extensions/metadata/#linking-sources","text":"When a document is related to a specific set of source files and the repo_url is defined inside the project's mkdocs.yml , the files can be linked using the source key: source: file.js The filename is appended to the repo_url set in your mkdocs.yml , but can be prefixed with a path to ensure correct path resolving: Example: path: tree/master/docs/extensions source: metadata.md Result: See the source section for the resulting output.","title":"Linking sources"},{"location":"extensions/metadata/#redirecting-to-another-page","text":"It's sometimes necessary to move documents around in the navigation tree and redirect user from the old URL to the new one. The redirect meta-tag allows to create a redirection from the current document to the address specified in the tag. For instance, if your document contains: redirect: /new/url accessing that document's URL will automatically redirect to /new/url .","title":"Redirecting to another page"},{"location":"extensions/metadata/#overrides","text":"","title":"Overrides"},{"location":"extensions/metadata/#page-title","text":"The page title can be overridden on a per-document level: title: Lorem ipsum dolor sit amet This will set the title tag inside the document head for the current page to the provided value. It will also override the default behavior of Material for MkDocs which appends the site title using a dash as a separator to the page title.","title":"Page title"},{"location":"extensions/metadata/#page-description","text":"The page description can also be overridden on a per-document level: description: Nullam urna elit, malesuada eget finibus ut, ac tortor. This will set the meta tag containing the site description inside the document head for the current page to the provided value.","title":"Page description"},{"location":"extensions/metadata/#disqus","text":"As described in the getting started guide , the Disqus comments section can be enabled on a per-document level: disqus: your-shortname Disqus can be disabled for a specific page by setting it to an empty value: disqus:","title":"Disqus"},{"location":"extensions/permalinks/","text":"Permalinks Permalinks are a feature of the Table of Contents extension, which is part of the standard Markdown library. The extension inserts an anchor at the end of each headline, which makes it possible to directly link to a subpart of the document. Installation To enable permalinks, add the following to your mkdocs.yml : markdown_extensions: - toc: permalink: true This will add a link containing the paragraph symbol \u00b6 at the end of each headline (exactly like on the page you're currently viewing), which the Material theme will make appear on hover. In order to change the text of the permalink, a string can be passed, e.g.: markdown_extensions: - toc: permalink: Link Usage When enabled, permalinks are inserted automatically.","title":"Permalinks"},{"location":"extensions/permalinks/#permalinks","text":"Permalinks are a feature of the Table of Contents extension, which is part of the standard Markdown library. The extension inserts an anchor at the end of each headline, which makes it possible to directly link to a subpart of the document.","title":"Permalinks"},{"location":"extensions/permalinks/#installation","text":"To enable permalinks, add the following to your mkdocs.yml : markdown_extensions: - toc: permalink: true This will add a link containing the paragraph symbol \u00b6 at the end of each headline (exactly like on the page you're currently viewing), which the Material theme will make appear on hover. In order to change the text of the permalink, a string can be passed, e.g.: markdown_extensions: - toc: permalink: Link","title":"Installation"},{"location":"extensions/permalinks/#usage","text":"When enabled, permalinks are inserted automatically.","title":"Usage"},{"location":"extensions/pymdown/","text":"PyMdown Extensions PyMdown Extensions is a collection of Markdown extensions that add some great features to the standard Markdown library. For this reason, the installation of this package is highly recommended as it's well-integrated with the Material theme. Installation The PyMdown Extensions package can be installed with the following command: pip install pymdown-extensions The following list of extensions that are part of the PyMdown Extensions package are recommended to be used together with the Material theme: markdown_extensions: - pymdownx.arithmatex - pymdownx.betterem: smart_enable: all - pymdownx.caret - pymdownx.critic - pymdownx.details - pymdownx.emoji: emoji_generator: !!python/name:pymdownx.emoji.to_svg - pymdownx.inlinehilite - pymdownx.magiclink - pymdownx.mark - pymdownx.smartsymbols - pymdownx.superfences - pymdownx.tasklist: custom_checkbox: true - pymdownx.tilde Usage Arithmatex MathJax Arithmatex integrates Material with MathJax which parses block-style and inline equations written in TeX markup and outputs them in mathematical notation. See this thread for a short introduction and quick reference on how to write equations in TeX syntax. Besides activating the extension in the mkdocs.yml , the MathJax JavaScript runtime needs to be included. This must be done with additional JavaScript : extra_javascript: - 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML' If you want to override the default MathJax configuration, you can do this by adding another JavaScript file before the MathJax runtime in extra_javascript which contains your MathJax configuration, e.g.: window.MathJax = { tex2jax: { inlineMath: [ [ \\\\( , \\\\) ] ], displayMath: [ [ \\\\[ , \\\\] ] ] }, TeX: { TagSide: right , TagIndent: .8em , MultLineWidth: 85% , equationNumbers: { autoNumber: AMS , }, unicode: { fonts: STIXGeneral,'Arial Unicode MS' } }, displayAlign: left , showProcessingMessages: false, messageStyle: none }; In your mkdocs.yml , include it with: extra_javascript: - 'javascripts/extra.js' - 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML' Blocks Blocks are enclosed in :::tex $$...$$ which are placed on separate lines. Example: $$ \\frac{n!}{k!(n-k)!} = \\binom{n}{k} $$ Result: $$ \\frac{n!}{k!(n-k)!} = \\binom{n}{k} $$ Inline Inline equations need to be enclosed in :::tex $...$ : Example: Lorem ipsum dolor sit amet: $p(x|y) = \\frac{p(y|x)p(x)}{p(y)}$ Result: Lorem ipsum dolor sit amet: $p(x|y) = \\frac{p(y|x)p(x)}{p(y)}$ BetterEm BetterEm improves the handling of emphasis markup ( bold and italic ) within Markdown by providing a more sophisticated parser for better detecting start and end tokens. Read the documentation for usage notes . Caret Caret makes it possible to highlight ^^inserted text^^. The portion of text that should be marked as added must be enclosed in two carets ^^...^^ . Critic Critic implements Critic Markup , a Markdown extension that enables the tracking of changes (additions, deletions and comments) on documents. During compilation of the Markdown document, changes can be rendered (default), accepted or rejected. Text can be {--deleted--} and replacement text {++added++}. This can also be combined into {~~one~ a single~~} operation. {==Highlighting==} is also possible { and comments can be added inline }. {== Formatting can also be applied to blocks, by putting the opening and closing tags on separate lines and adding new lines between the tags and the content. ==} Details Details adds collapsible Admonition-style blocks which can contain arbitrary content using the HTML5 details and summary tags. Additionally, all Admonition qualifiers can be used, e.g. note , question , warning etc.: ??? question \"How many Prolog programmers does it take to change a lightbulb?\" Yes. Emoji Emoji adds the ability to insert a :shit:-load of emojis that we use in our daily lives. See the EmojiOne demo for a list of all available emojis. Happy scrolling :tada: !!! warning \"Legal disclaimer\" Material has no affiliation with [EmojiOne][15] which is released under [CC BY 4.0][16]. When including EmojiOne images or CSS, please read the [EmojiOne license][17] to ensure proper usage and attribution. InlineHilite InlineHilite adds support for inline code highlighting. It's useful for short snippets included within body copy, e.g. #!js var test = 0; and can be achieved by prefixing inline code with a shebang and language identifier, e.g. #!js . MagicLink MagicLink detects links in Markdown and auto-generates the necessary markup, so no special syntax is required. It auto-links http[s]:// and ftp:// links, as well as references to email addresses. Mark Mark adds the ability to ==highlight text== like it was marked with a ==text marker==. The portion of text that should be highlighted must be enclosed in two equal signs ==...== . SmartSymbols SmartSymbols converts markup for special characters into their corresponding symbols, e.g. arrows ( --, -- , -- ), trademark and copyright symbols ((c), (tm), (r)) and fractions (1/2, 1/4, ...). SuperFences SuperFences provides the ability to nest code blocks under blockquotes, lists and other block elements, which the Fenced Code Blocks extension from the standard Markdown library doesn't parse correctly. SuperFences does also allow grouping code blocks with tabs . Tasklist Tasklist adds support for styled checkbox lists. This is useful for keeping track of tasks and showing what has been done and has yet to be done. Checkbox lists are like regular lists, but prefixed with [ ] for empty or [x] for filled checkboxes. Example: * [x] Lorem ipsum dolor sit amet, consectetur adipiscing elit * [x] Nulla lobortis egestas semper * [x] Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est * [ ] Vestibulum convallis sit amet nisi a tincidunt * [x] In hac habitasse platea dictumst * [x] In scelerisque nibh non dolor mollis congue sed et metus * [x] Sed egestas felis quis elit dapibus, ac aliquet turpis mattis * [ ] Praesent sed risus massa * [ ] Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque * [ ] Nulla vel eros venenatis, imperdiet enim id, faucibus nisi Result: [x] Lorem ipsum dolor sit amet, consectetur adipiscing elit [x] Nulla lobortis egestas semper [x] Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est [ ] Vestibulum convallis sit amet nisi a tincidunt [x] In hac habitasse platea dictumst [x] In scelerisque nibh non dolor mollis congue sed et metus [x] Sed egestas felis quis elit dapibus, ac aliquet turpis mattis [ ] Praesent sed risus massa [ ] Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque [ ] Nulla vel eros venenatis, imperdiet enim id, faucibus nisi Tilde Tilde provides an easy way to ~~strike through~~ cross out text. The portion of text that should be erased must be enclosed in two tildes ~~...~~ and the extension will take care of the rest.","title":"PyMdown Extensions"},{"location":"extensions/pymdown/#pymdown-extensions","text":"PyMdown Extensions is a collection of Markdown extensions that add some great features to the standard Markdown library. For this reason, the installation of this package is highly recommended as it's well-integrated with the Material theme.","title":"PyMdown Extensions"},{"location":"extensions/pymdown/#installation","text":"The PyMdown Extensions package can be installed with the following command: pip install pymdown-extensions The following list of extensions that are part of the PyMdown Extensions package are recommended to be used together with the Material theme: markdown_extensions: - pymdownx.arithmatex - pymdownx.betterem: smart_enable: all - pymdownx.caret - pymdownx.critic - pymdownx.details - pymdownx.emoji: emoji_generator: !!python/name:pymdownx.emoji.to_svg - pymdownx.inlinehilite - pymdownx.magiclink - pymdownx.mark - pymdownx.smartsymbols - pymdownx.superfences - pymdownx.tasklist: custom_checkbox: true - pymdownx.tilde","title":"Installation"},{"location":"extensions/pymdown/#usage","text":"","title":"Usage"},{"location":"extensions/pymdown/#arithmatex-mathjax","text":"Arithmatex integrates Material with MathJax which parses block-style and inline equations written in TeX markup and outputs them in mathematical notation. See this thread for a short introduction and quick reference on how to write equations in TeX syntax. Besides activating the extension in the mkdocs.yml , the MathJax JavaScript runtime needs to be included. This must be done with additional JavaScript : extra_javascript: - 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML' If you want to override the default MathJax configuration, you can do this by adding another JavaScript file before the MathJax runtime in extra_javascript which contains your MathJax configuration, e.g.: window.MathJax = { tex2jax: { inlineMath: [ [ \\\\( , \\\\) ] ], displayMath: [ [ \\\\[ , \\\\] ] ] }, TeX: { TagSide: right , TagIndent: .8em , MultLineWidth: 85% , equationNumbers: { autoNumber: AMS , }, unicode: { fonts: STIXGeneral,'Arial Unicode MS' } }, displayAlign: left , showProcessingMessages: false, messageStyle: none }; In your mkdocs.yml , include it with: extra_javascript: - 'javascripts/extra.js' - 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML'","title":"Arithmatex MathJax"},{"location":"extensions/pymdown/#blocks","text":"Blocks are enclosed in :::tex $$...$$ which are placed on separate lines. Example: $$ \\frac{n!}{k!(n-k)!} = \\binom{n}{k} $$ Result: $$ \\frac{n!}{k!(n-k)!} = \\binom{n}{k} $$","title":"Blocks"},{"location":"extensions/pymdown/#inline","text":"Inline equations need to be enclosed in :::tex $...$ : Example: Lorem ipsum dolor sit amet: $p(x|y) = \\frac{p(y|x)p(x)}{p(y)}$ Result: Lorem ipsum dolor sit amet: $p(x|y) = \\frac{p(y|x)p(x)}{p(y)}$","title":"Inline"},{"location":"extensions/pymdown/#betterem","text":"BetterEm improves the handling of emphasis markup ( bold and italic ) within Markdown by providing a more sophisticated parser for better detecting start and end tokens. Read the documentation for usage notes .","title":"BetterEm"},{"location":"extensions/pymdown/#caret","text":"Caret makes it possible to highlight ^^inserted text^^. The portion of text that should be marked as added must be enclosed in two carets ^^...^^ .","title":"Caret"},{"location":"extensions/pymdown/#critic","text":"Critic implements Critic Markup , a Markdown extension that enables the tracking of changes (additions, deletions and comments) on documents. During compilation of the Markdown document, changes can be rendered (default), accepted or rejected. Text can be {--deleted--} and replacement text {++added++}. This can also be combined into {~~one~ a single~~} operation. {==Highlighting==} is also possible { and comments can be added inline }. {== Formatting can also be applied to blocks, by putting the opening and closing tags on separate lines and adding new lines between the tags and the content. ==}","title":"Critic"},{"location":"extensions/pymdown/#details","text":"Details adds collapsible Admonition-style blocks which can contain arbitrary content using the HTML5 details and summary tags. Additionally, all Admonition qualifiers can be used, e.g. note , question , warning etc.: ??? question \"How many Prolog programmers does it take to change a lightbulb?\" Yes.","title":"Details"},{"location":"extensions/pymdown/#emoji","text":"Emoji adds the ability to insert a :shit:-load of emojis that we use in our daily lives. See the EmojiOne demo for a list of all available emojis. Happy scrolling :tada: !!! warning \"Legal disclaimer\" Material has no affiliation with [EmojiOne][15] which is released under [CC BY 4.0][16]. When including EmojiOne images or CSS, please read the [EmojiOne license][17] to ensure proper usage and attribution.","title":"Emoji"},{"location":"extensions/pymdown/#inlinehilite","text":"InlineHilite adds support for inline code highlighting. It's useful for short snippets included within body copy, e.g. #!js var test = 0; and can be achieved by prefixing inline code with a shebang and language identifier, e.g. #!js .","title":"InlineHilite"},{"location":"extensions/pymdown/#magiclink","text":"MagicLink detects links in Markdown and auto-generates the necessary markup, so no special syntax is required. It auto-links http[s]:// and ftp:// links, as well as references to email addresses.","title":"MagicLink"},{"location":"extensions/pymdown/#mark","text":"Mark adds the ability to ==highlight text== like it was marked with a ==text marker==. The portion of text that should be highlighted must be enclosed in two equal signs ==...== .","title":"Mark"},{"location":"extensions/pymdown/#smartsymbols","text":"SmartSymbols converts markup for special characters into their corresponding symbols, e.g. arrows ( --, -- , -- ), trademark and copyright symbols ((c), (tm), (r)) and fractions (1/2, 1/4, ...).","title":"SmartSymbols"},{"location":"extensions/pymdown/#superfences","text":"SuperFences provides the ability to nest code blocks under blockquotes, lists and other block elements, which the Fenced Code Blocks extension from the standard Markdown library doesn't parse correctly. SuperFences does also allow grouping code blocks with tabs .","title":"SuperFences"},{"location":"extensions/pymdown/#tasklist","text":"Tasklist adds support for styled checkbox lists. This is useful for keeping track of tasks and showing what has been done and has yet to be done. Checkbox lists are like regular lists, but prefixed with [ ] for empty or [x] for filled checkboxes. Example: * [x] Lorem ipsum dolor sit amet, consectetur adipiscing elit * [x] Nulla lobortis egestas semper * [x] Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est * [ ] Vestibulum convallis sit amet nisi a tincidunt * [x] In hac habitasse platea dictumst * [x] In scelerisque nibh non dolor mollis congue sed et metus * [x] Sed egestas felis quis elit dapibus, ac aliquet turpis mattis * [ ] Praesent sed risus massa * [ ] Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque * [ ] Nulla vel eros venenatis, imperdiet enim id, faucibus nisi Result: [x] Lorem ipsum dolor sit amet, consectetur adipiscing elit [x] Nulla lobortis egestas semper [x] Curabitur elit nibh, euismod et ullamcorper at, iaculis feugiat est [ ] Vestibulum convallis sit amet nisi a tincidunt [x] In hac habitasse platea dictumst [x] In scelerisque nibh non dolor mollis congue sed et metus [x] Sed egestas felis quis elit dapibus, ac aliquet turpis mattis [ ] Praesent sed risus massa [ ] Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque [ ] Nulla vel eros venenatis, imperdiet enim id, faucibus nisi","title":"Tasklist"},{"location":"extensions/pymdown/#tilde","text":"Tilde provides an easy way to ~~strike through~~ cross out text. The portion of text that should be erased must be enclosed in two tildes ~~...~~ and the extension will take care of the rest.","title":"Tilde"},{"location":"golang/gomod/","text":"","title":"Gomod"},{"location":"networking/networking/","text":"OSI Model - Open Systems Interconnect Physical Layer - Twisted, Co-axial, Wireless, Copper cables etc. Datalink Layer - Ethernet Protocol (Wired/Wireless), docsis3 Protocol (ISP - Internet) - Data Over Cable Service Interface Specification. Datalink Layer is the place where data movement takes place from one device to an another device. Network Layer - IP Addressing and IP Routing. Allows end to end communication, where as Ethernet allows only device to device communications. Transport Layer - Transmission Control Protocol Universal Datagram Protocol. Builds session between client and the server. Application Layer - http, https, ssh etc. Application Layer Protocols Data Transfer Protocols - HTTP/HTTPS, protocol used to transfer hypertext documents. - FTP (20 Auth, 21 Data Transfer), SFTP (22), TFTP (69) tranferring files. TFTP for sending small files without authentication. Email Protocols - POP3 110/995, SMTP 25/465, IMAP 143/993 Authentication Protocols - LDAP 389, LDAPS 636 Network Service Protocols - DHCP, DNS 53, NTP Network Management Protocols- TELNET 23, SSH 22, SNMP Audio Visual Protocols - H.323 1720/1721 (Audio/Video comms), SIP 5060/5061 (Session Initiation Protocol) Layer 4 Layer 7 Layer 4 - Transport Layer Protocols and Uinversal Datagram Protocols. 3-way Handshake Step 1: SYN from client to server Step 2: ACK + SYN from server Step 3: ACK from client We user layer4 to establish the session and layer7 for actual data transfer. 4-way Disconnect Step 1: FIN from server Step 2: FIN + ACK from client Step 3: FIN from client Step 4: FIN + ACK from server We can quicky end the session with out following 4-way Disconnect sequence by using RST (RESET) message.","title":"Networking"},{"location":"networking/networking/#osi-model-open-systems-interconnect","text":"Physical Layer - Twisted, Co-axial, Wireless, Copper cables etc. Datalink Layer - Ethernet Protocol (Wired/Wireless), docsis3 Protocol (ISP - Internet) - Data Over Cable Service Interface Specification. Datalink Layer is the place where data movement takes place from one device to an another device. Network Layer - IP Addressing and IP Routing. Allows end to end communication, where as Ethernet allows only device to device communications. Transport Layer - Transmission Control Protocol Universal Datagram Protocol. Builds session between client and the server. Application Layer - http, https, ssh etc.","title":"OSI Model - Open Systems Interconnect"},{"location":"networking/networking/#application-layer-protocols","text":"Data Transfer Protocols - HTTP/HTTPS, protocol used to transfer hypertext documents. - FTP (20 Auth, 21 Data Transfer), SFTP (22), TFTP (69) tranferring files. TFTP for sending small files without authentication. Email Protocols - POP3 110/995, SMTP 25/465, IMAP 143/993 Authentication Protocols - LDAP 389, LDAPS 636 Network Service Protocols - DHCP, DNS 53, NTP Network Management Protocols- TELNET 23, SSH 22, SNMP Audio Visual Protocols - H.323 1720/1721 (Audio/Video comms), SIP 5060/5061 (Session Initiation Protocol)","title":"Application Layer Protocols"},{"location":"networking/networking/#layer-4-layer-7","text":"Layer 4 - Transport Layer Protocols and Uinversal Datagram Protocols.","title":"Layer 4 &amp; Layer 7"},{"location":"networking/networking/#3-way-handshake","text":"Step 1: SYN from client to server Step 2: ACK + SYN from server Step 3: ACK from client We user layer4 to establish the session and layer7 for actual data transfer.","title":"3-way Handshake"},{"location":"networking/networking/#4-way-disconnect","text":"Step 1: FIN from server Step 2: FIN + ACK from client Step 3: FIN from client Step 4: FIN + ACK from server We can quicky end the session with out following 4-way Disconnect sequence by using RST (RESET) message.","title":"4-way Disconnect"},{"location":"web/http/","text":"Fragments and Queries in HTTP url: Example: https://www.yahoo.com/search?q=tesla%20research Query: search?q=tesla%20research Example: https://www.yahoo.com/search?q=tesla%20research#space%20research Query: #space research Which means under \"q=tesla%20research\" resource scroll to \"#space\" section. HTTP Request Methods: [GET] Retreive a resource [POST] Update a resource [PUT] Store a resource [DELETE] Remove a resource [HEAD] Reterive the headers for a resource telnet yahoo.com 80 GET /yahoo.com/yahoomail.jpg HTTP/1.1 Host:yahoo.com Safe and Unsafe: Safe - let's you to read and view resources. Unsafe - let's you to modify the resources. Post/Redirect/Get Operation: To avoid duplicate post requests signup (GET signup) signup page with forms (POST and update the data and REDIRECT to signed page) signed http Request Format: [method] [url] [version] [GET] [http://server.com/articles/741.html] [HTTP/1.1] [headers] [HOST]: [yahoo.com] [headers] [Accept-Language]: [fr-FR] [headers] [Date]: [Fri, 10 Aug 2002 21:12:00 GMT] Common Request Header: Referrer The URL of the referring page. The page where the URL originated. User-Agent Information about the browser. Accept Preffered media types. Accept-Language Preferred language. Cookie Cookie information. If-Modified-Since Date of last retrieval. Used for caching. Date Creation timestamp for the message. http Response Format: [version] [status] [reason] [HTTP/1.1] [200] [ok] [headers] [Server]: [nginx] [headers] [Content-Type]: [text/html] [body] Status Codes: [100-199] Informational [200-299] Successful [300-309] Redirection [400-499] Client Error [500-599] Server Error [200] [OK] Success. [301] [Moved Permanently] Resource Moved, don't check here again. [302] [Moved Temporarily] Resource Moved, but check here again. (Post Redirect Get Mechanism) [304] [Not Modified] Resource hasn't changed since last retrieval. [400] [Bad Request] Bad Syntax. [401] [Unauthorized] Client might need to authenticate. [403] [Forbidden] Refused Access. [404] [Not found] Resource doesn't exist. [500] [Internal server error] Something went wrong during processing. [503] [Service unavailable] Server will not service the request. HTTP Connections How does the messages actualy moves in the network? When are the network connections opened? When are the network connections closed? http (Application Layer) - tcp (Transport Layer) http Layer (Browser): 1 - Extract the host name and port number from the URL \"http://mail.yahoo.com/q?s=^mail\". 2 - Creates an HTTP socket and start writing the data to the socket. TCP Transport Layer: 1 - Accepts the data and ensures the data is getting delivered to the server without getting lost or duplicated. Error detection / flow control and takes care of the data reliablity. IP Network Layer: 1 - Responsible for taking these information and moving them in the network switch/router/gateway etc. 2 - IP is responsible for delivering the data to destination but doesn't gaurentee the delivery (TCP's job). Datalink Layer: 1 - Ethernet frames. TCP Handshake: Before starting the actual transmission, there is a 3 steps process followed to make sure the server and the client are in agreement to transfer the data. [SYN] Seq=0 [SYN, ACK] Seq=0 Ack=1 [ACK] Seq=1 Ack=1 Persistent Connections: Default type of connection in HTTP/1.1 1 - Persistent connection stays open after completion of one request response transaction. 2 - There is always a downside, each server has a limit in number of persistent connections as a security measure. 3 - Attackes will perform DOS attacks by opening number of persistent connections and makes servers un-responsive. 4 - Since servers only accepts only finite number of persistent connections, servers are configured to close the connections after certain intervals (if idle). Note: The server which does not allow the persistent connection must include a http connection header called \"Connection: close\" which will not allow the client to make another request on the same request. It has to re-open a new connection. Parallel connections: Making 2 different connection parallely at the same time. The server will return \"Connection: close\" header. Persistent Connections: Making more than one req/res transaction in a single connection. Proxies: Forward and Reverse Proxy: Forward Proxy forwards the client requests to the internet. Example: Specific set of users (clients) can access twitter from company via the Forward server. Reverse Proxy: Reverse sits at the server end accepts the request from internet and forwards them to servers (example: load balancing). Cache Controls: With HTTP/1.1 clients and proxies generally cache the response with 200 ok response code. (response to the http get request) It will not cache PUT, POST and DELETE transaction. Note: Application server can influence this cache settings by using appropriate cache headers. \"Cache-Control: private, max-age=0\" Cache-Control: public Public proxy servers can cache the response. Cache-Control: private Response targeted to single user, only web browser. Cache-Control: no-cache Should not be cached. Cache-Control: no-store HTTP Security: The stateful and stateless web: HTTP is designed as a stateless protocol, each request/response transaction is independent of any previous or future transactions. cookie are used for tracking / differentiate one user from another user. Non-Persistent Cookies (Session Cookies): These cookies will be used only for particular session. Example: set-cookie: GUID=07hfhjebhbwb76, domain=.search.yahoo.com, // Send this cookie only to yahoo.com and not to other websites. path=/ // Restrict cookie to specific path. Persistent Cookies (Will have a validity and stored to client filesystem). set-cookie: GUID=07hfhjebhbwb76, domain=.search.yahoo.com, path=/, expires=Monday, 09-July-2019 21:20:00 GMT Authentication Types: Basic Type: 1. GET /account HTTP/1.1 Host: starlingbank.com ... 2. HTPP/1.1 401 Unauthorized WWW-Authenticate: Basic realm=\"starlingbank.com\" 3. GET /account HTTP/1.1 Host: starlingbank.com Authorization: Basic Z3fnjnjnsflr \"Authorization\" [header type] \"Basic\" [AUTH type] \"Z3fnjnjnsflr\" [base64 encoded value of username and password] Digest: uses md5 digets instead of base64 Form Authentication: When you try to access a secured resource, the user will be temporarily redirected to a web page with authentication form. If authentication is successful, the user will be redirected again to the secured resource. Open ID","title":"Http"},{"location":"web/http/#fragments-and-queries-in-http-url","text":"Example: https://www.yahoo.com/search?q=tesla%20research Query: search?q=tesla%20research Example: https://www.yahoo.com/search?q=tesla%20research#space%20research Query: #space research Which means under \"q=tesla%20research\" resource scroll to \"#space\" section.","title":"Fragments and Queries in HTTP url:"},{"location":"web/http/#http-request-methods","text":"[GET] Retreive a resource [POST] Update a resource [PUT] Store a resource [DELETE] Remove a resource [HEAD] Reterive the headers for a resource telnet yahoo.com 80 GET /yahoo.com/yahoomail.jpg HTTP/1.1 Host:yahoo.com","title":"HTTP Request Methods:"},{"location":"web/http/#safe-and-unsafe","text":"Safe - let's you to read and view resources. Unsafe - let's you to modify the resources.","title":"Safe and Unsafe:"},{"location":"web/http/#postredirectget-operation-to-avoid-duplicate-post-requests","text":"signup (GET signup) signup page with forms (POST and update the data and REDIRECT to signed page) signed","title":"Post/Redirect/Get Operation: To avoid duplicate post requests"},{"location":"web/http/#http-request-format","text":"[method] [url] [version] [GET] [http://server.com/articles/741.html] [HTTP/1.1] [headers] [HOST]: [yahoo.com] [headers] [Accept-Language]: [fr-FR] [headers] [Date]: [Fri, 10 Aug 2002 21:12:00 GMT]","title":"http Request Format:"},{"location":"web/http/#common-request-header","text":"Referrer The URL of the referring page. The page where the URL originated. User-Agent Information about the browser. Accept Preffered media types. Accept-Language Preferred language. Cookie Cookie information. If-Modified-Since Date of last retrieval. Used for caching. Date Creation timestamp for the message.","title":"Common Request Header:"},{"location":"web/http/#http-response-format","text":"[version] [status] [reason] [HTTP/1.1] [200] [ok] [headers] [Server]: [nginx] [headers] [Content-Type]: [text/html] [body]","title":"http Response Format:"},{"location":"web/http/#status-codes","text":"[100-199] Informational [200-299] Successful [300-309] Redirection [400-499] Client Error [500-599] Server Error [200] [OK] Success. [301] [Moved Permanently] Resource Moved, don't check here again. [302] [Moved Temporarily] Resource Moved, but check here again. (Post Redirect Get Mechanism) [304] [Not Modified] Resource hasn't changed since last retrieval. [400] [Bad Request] Bad Syntax. [401] [Unauthorized] Client might need to authenticate. [403] [Forbidden] Refused Access. [404] [Not found] Resource doesn't exist. [500] [Internal server error] Something went wrong during processing. [503] [Service unavailable] Server will not service the request.","title":"Status Codes:"},{"location":"web/http/#http-connections","text":"How does the messages actualy moves in the network? When are the network connections opened? When are the network connections closed? http (Application Layer) - tcp (Transport Layer)","title":"HTTP Connections"},{"location":"web/http/#http-layer-browser","text":"1 - Extract the host name and port number from the URL \"http://mail.yahoo.com/q?s=^mail\". 2 - Creates an HTTP socket and start writing the data to the socket.","title":"http Layer (Browser):"},{"location":"web/http/#tcp-transport-layer","text":"1 - Accepts the data and ensures the data is getting delivered to the server without getting lost or duplicated. Error detection / flow control and takes care of the data reliablity.","title":"TCP Transport Layer:"},{"location":"web/http/#ip-network-layer","text":"1 - Responsible for taking these information and moving them in the network switch/router/gateway etc. 2 - IP is responsible for delivering the data to destination but doesn't gaurentee the delivery (TCP's job).","title":"IP Network Layer:"},{"location":"web/http/#datalink-layer","text":"1 - Ethernet frames.","title":"Datalink Layer:"},{"location":"web/http/#tcp-handshake","text":"Before starting the actual transmission, there is a 3 steps process followed to make sure the server and the client are in agreement to transfer the data. [SYN] Seq=0 [SYN, ACK] Seq=0 Ack=1 [ACK] Seq=1 Ack=1","title":"TCP Handshake:"},{"location":"web/http/#persistent-connections-default-type-of-connection-in-http11","text":"1 - Persistent connection stays open after completion of one request response transaction. 2 - There is always a downside, each server has a limit in number of persistent connections as a security measure. 3 - Attackes will perform DOS attacks by opening number of persistent connections and makes servers un-responsive. 4 - Since servers only accepts only finite number of persistent connections, servers are configured to close the connections after certain intervals (if idle). Note: The server which does not allow the persistent connection must include a http connection header called \"Connection: close\" which will not allow the client to make another request on the same request. It has to re-open a new connection. Parallel connections: Making 2 different connection parallely at the same time. The server will return \"Connection: close\" header. Persistent Connections: Making more than one req/res transaction in a single connection.","title":"Persistent Connections: Default type of connection in HTTP/1.1"},{"location":"web/http/#proxies","text":"Forward and Reverse Proxy: Forward Proxy forwards the client requests to the internet. Example: Specific set of users (clients) can access twitter from company via the Forward server.","title":"Proxies:"},{"location":"web/http/#reverse-proxy","text":"Reverse sits at the server end accepts the request from internet and forwards them to servers (example: load balancing).","title":"Reverse Proxy:"},{"location":"web/http/#cache-controls","text":"With HTTP/1.1 clients and proxies generally cache the response with 200 ok response code. (response to the http get request) It will not cache PUT, POST and DELETE transaction. Note: Application server can influence this cache settings by using appropriate cache headers. \"Cache-Control: private, max-age=0\" Cache-Control: public Public proxy servers can cache the response. Cache-Control: private Response targeted to single user, only web browser. Cache-Control: no-cache Should not be cached. Cache-Control: no-store","title":"Cache Controls:"},{"location":"web/http/#http-security","text":"The stateful and stateless web: HTTP is designed as a stateless protocol, each request/response transaction is independent of any previous or future transactions. cookie are used for tracking / differentiate one user from another user. Non-Persistent Cookies (Session Cookies): These cookies will be used only for particular session. Example: set-cookie: GUID=07hfhjebhbwb76, domain=.search.yahoo.com, // Send this cookie only to yahoo.com and not to other websites. path=/ // Restrict cookie to specific path. Persistent Cookies (Will have a validity and stored to client filesystem). set-cookie: GUID=07hfhjebhbwb76, domain=.search.yahoo.com, path=/, expires=Monday, 09-July-2019 21:20:00 GMT","title":"HTTP Security:"},{"location":"web/http/#authentication-types","text":"Basic Type: 1. GET /account HTTP/1.1 Host: starlingbank.com ... 2. HTPP/1.1 401 Unauthorized WWW-Authenticate: Basic realm=\"starlingbank.com\" 3. GET /account HTTP/1.1 Host: starlingbank.com Authorization: Basic Z3fnjnjnsflr \"Authorization\" [header type] \"Basic\" [AUTH type] \"Z3fnjnjnsflr\" [base64 encoded value of username and password] Digest: uses md5 digets instead of base64","title":"Authentication Types:"},{"location":"web/http/#form-authentication","text":"When you try to access a secured resource, the user will be temporarily redirected to a web page with authentication form. If authentication is successful, the user will be redirected again to the secured resource. Open ID","title":"Form Authentication:"},{"location":"web/nginx_cheatsheet/","text":"Notes: The basic nginx architecture consists of a master process and its workers. Developed to solve c10k problems. Which means handling 10,000 concurrent connections. Applications: High Performance Web Server Reverse Proxy (SSL Termination and Contnet Caching and Termination) Load Balancer The master is supposed to read the configuration file and maintain worker processes, while workers do the actual processing of requests. References: To get info about core context and directive blocks, go to http://nginx.org/en/docs/ngx_core_module.html Commands: While your nginx instance is running, you can manage it by sending signals: sudo nginx -s signal stop: fast shutdown quit: graceful shutdown (wait for workers to finish their processes) reload: reload the configuration file reopen: reopen the log files To verify configuration: nginx -t To view selinux context: semanage fcontext -l | grep -i /usr/share/nginx/html To add selinux context: semanage fcontext -a -t httpd_sys_content_t '/var/www' To restore context back to default: restorecon -R -v '/var/www' Curl with host header: curl --header \"Host: www.example.com\" localhost Configuration files location: /etc/nginx/nginx.conf /usr/local/etc/nginx/nginx.conf /usr/local/nginx/conf/nginx.conf Directive and Context: Directive: The option that consists of name and parameters; it should end with a semicolon Example: gzip on; Context: Section where you can declare directives (similar to scope in programming languages) Example: http { # http context gzip on; # directive in http context } Directive types: You have to pay attention when using the same directive in multiple contexts, as the inheritance model differs for different directives. There are 3 types of directives, each with its own inheritance model. Normal: Has one value per context. Also, it can be defined only once in the context. Subcontexts can override the parent directive, but this override will be valid only in a given subcontext. gzip on; gzip off; # illegal to have 2 normal directives in same context server { # server context location /downloads { # location subcontext under server context } location /assets { } } Array: Adding multiple directives in the same context will add to the values instead of overwriting them altogether. Defining a directive in a subcontext will override ALL parent values in the given subcontext. error_log /var/log/nginx/error.log; error_log /var/log/nginx/error_native.log notice; error_log /var/log/nginx/error_debug.log debug; server { location /downloads { # this will override all the parent directives error_log /var/log/nginx/error_downloads.log; } } Action: Actions are directives that change things. Their inheritance behaviour will depend on the module. For example, in the case of the rewrite directive, every matching directive will be executed: server { rewrite ^ /foobar; location /foobar { rewrite ^ /foo; rewrite ^ /bar; } } Custom Error Pages: Syntax: error_page list of error codes error page Example: error_page 404 /404.html Basic Auth: https://nginx.org/en/docs/http/ngx_http_auth_basic_module.html location /admin.html { auth_basic \"Login Required\"; auth_basic_user_file /etc/nginx/.htpasswd; } nginx SSL: https://nginx.org/en/docs/http/ngx_http_ssl_module.html Self Singed Certs: mkdir /etc/nginx/ssl openssl -req x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/keys/private.key -out /etc/nginx/ssl/public.pem req - We\u2019re making a certificate request to OpenSSL -x509 - Specifying the structure that our certificate should have. Conforms to the X.509 standard -nodes - Do not encrypt the output key -days 365 - Set the key to be valid for 365 days -newkey rsa:2048 - Generate an RSA key that is 2048 bits in size -keyout /etc/nginx/ssl/private.key - File to write the private key to -out /etc/nginx/ssl/public.pem - Output file for public portion of key server { listen 443 ssl; root /usr/share/nginx/html; ssl_certificate /etc/nginx/ssl/home.v01.openhouse.cert.pem; ssl_certificate_key /etc/nginx/ssl/keys/home.v01.openhouse.key.pem; server_name _; location = /admin.html { auth_basic \"Login Required\"; auth_basic_user_file /etc/nginx/.htpasswd; } error_page 404 /404.html; }","title":"Nginx cheatsheet"},{"location":"web/nginx_cheatsheet/#notes","text":"The basic nginx architecture consists of a master process and its workers. Developed to solve c10k problems. Which means handling 10,000 concurrent connections.","title":"Notes:"},{"location":"web/nginx_cheatsheet/#applications","text":"High Performance Web Server Reverse Proxy (SSL Termination and Contnet Caching and Termination) Load Balancer The master is supposed to read the configuration file and maintain worker processes, while workers do the actual processing of requests.","title":"Applications:"},{"location":"web/nginx_cheatsheet/#references","text":"To get info about core context and directive blocks, go to http://nginx.org/en/docs/ngx_core_module.html","title":"References:"},{"location":"web/nginx_cheatsheet/#commands","text":"While your nginx instance is running, you can manage it by sending signals: sudo nginx -s signal stop: fast shutdown quit: graceful shutdown (wait for workers to finish their processes) reload: reload the configuration file reopen: reopen the log files To verify configuration: nginx -t To view selinux context: semanage fcontext -l | grep -i /usr/share/nginx/html To add selinux context: semanage fcontext -a -t httpd_sys_content_t '/var/www' To restore context back to default: restorecon -R -v '/var/www' Curl with host header: curl --header \"Host: www.example.com\" localhost","title":"Commands:"},{"location":"web/nginx_cheatsheet/#configuration-files-location","text":"/etc/nginx/nginx.conf /usr/local/etc/nginx/nginx.conf /usr/local/nginx/conf/nginx.conf","title":"Configuration files location:"},{"location":"web/nginx_cheatsheet/#directive-and-context","text":"Directive: The option that consists of name and parameters; it should end with a semicolon Example: gzip on; Context: Section where you can declare directives (similar to scope in programming languages) Example: http { # http context gzip on; # directive in http context }","title":"Directive and Context:"},{"location":"web/nginx_cheatsheet/#directive-types","text":"You have to pay attention when using the same directive in multiple contexts, as the inheritance model differs for different directives. There are 3 types of directives, each with its own inheritance model.","title":"Directive types:"},{"location":"web/nginx_cheatsheet/#normal","text":"Has one value per context. Also, it can be defined only once in the context. Subcontexts can override the parent directive, but this override will be valid only in a given subcontext. gzip on; gzip off; # illegal to have 2 normal directives in same context server { # server context location /downloads { # location subcontext under server context } location /assets { } }","title":"Normal:"},{"location":"web/nginx_cheatsheet/#array","text":"Adding multiple directives in the same context will add to the values instead of overwriting them altogether. Defining a directive in a subcontext will override ALL parent values in the given subcontext. error_log /var/log/nginx/error.log; error_log /var/log/nginx/error_native.log notice; error_log /var/log/nginx/error_debug.log debug; server { location /downloads { # this will override all the parent directives error_log /var/log/nginx/error_downloads.log; } }","title":"Array:"},{"location":"web/nginx_cheatsheet/#action","text":"Actions are directives that change things. Their inheritance behaviour will depend on the module. For example, in the case of the rewrite directive, every matching directive will be executed: server { rewrite ^ /foobar; location /foobar { rewrite ^ /foo; rewrite ^ /bar; } }","title":"Action:"},{"location":"web/nginx_cheatsheet/#custom-error-pages","text":"Syntax: error_page list of error codes error page Example: error_page 404 /404.html","title":"Custom Error Pages:"},{"location":"web/nginx_cheatsheet/#basic-auth","text":"https://nginx.org/en/docs/http/ngx_http_auth_basic_module.html location /admin.html { auth_basic \"Login Required\"; auth_basic_user_file /etc/nginx/.htpasswd; } nginx SSL: https://nginx.org/en/docs/http/ngx_http_ssl_module.html","title":"Basic Auth:"},{"location":"web/nginx_cheatsheet/#self-singed-certs","text":"mkdir /etc/nginx/ssl openssl -req x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/keys/private.key -out /etc/nginx/ssl/public.pem req - We\u2019re making a certificate request to OpenSSL -x509 - Specifying the structure that our certificate should have. Conforms to the X.509 standard -nodes - Do not encrypt the output key -days 365 - Set the key to be valid for 365 days -newkey rsa:2048 - Generate an RSA key that is 2048 bits in size -keyout /etc/nginx/ssl/private.key - File to write the private key to -out /etc/nginx/ssl/public.pem - Output file for public portion of key server { listen 443 ssl; root /usr/share/nginx/html; ssl_certificate /etc/nginx/ssl/home.v01.openhouse.cert.pem; ssl_certificate_key /etc/nginx/ssl/keys/home.v01.openhouse.key.pem; server_name _; location = /admin.html { auth_basic \"Login Required\"; auth_basic_user_file /etc/nginx/.htpasswd; } error_page 404 /404.html; }","title":"Self Singed Certs:"}]}